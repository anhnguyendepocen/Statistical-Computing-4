library(data.table, quietly = TRUE, warn.conflicts = FALSE)
assignInNamespace("cedta.pkgEvalsUserCode", c(data.table:::cedta.pkgEvalsUserCode, "rtvs"), "data.table")
library(here, quietly = T, warn.conflicts = F)
library(ggplot2, quietly = T, warn.conflicts = F)
library(ggrepel, quietly = TRUE, warn.conflicts = FALSE)
library(ggthemes, quietly = TRUE, warn.conflicts = FALSE)
library(knitr, quietly = TRUE, warn.conflicts = FALSE)
library(kableExtra, quietly = TRUE, warn.conflicts = FALSE)
library(scales, quietly = TRUE, warn.conflicts = FALSE)
library(pander, quietly = TRUE, warn.conflicts = FALSE)
library(dplyr, quietly = TRUE, warn.conflicts = FALSE)
library(formattable, quietly = TRUE, warn.conflicts = FALSE)
library(grid, quietly = TRUE, warn.conflicts = FALSE)
library(gridExtra, quietly = TRUE, warn.conflicts = FALSE)
library(WRS, quietly = TRUE, warn.conflicts = FALSE)
options(tinytex.verbose = TRUE)
suppressMessages(library("tidyverse"))
pretty_kable <- function(data, title, dig = 2) {
kable(data, caption = title, digits = dig) %>%
kable_styling(bootstrap_options = c("striped", "hover")) %>%
kableExtra::kable_styling(latex_options = "hold_position")
}
theme_set(theme_light())
# Theme Overrides
theme_update(axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
plot.title = element_text(hjust = 0.5, size = 16, face = "bold", color = "darkgreen"),
axis.title = element_text(face = "bold", size = 12, colour = "steelblue4"),
plot.subtitle = element_text(face = "bold", size = 8, colour = "darkred"),
legend.title = element_text(size = 12, color = "darkred", face = "bold"),
legend.position = "right", legend.title.align=0.5,
panel.border = element_rect(linetype = "solid",
colour = "lightgray"),
plot.margin = unit(c( 0.1, 0.1, 0.1, 0.1), "inches"))
data.dir <- paste0(here::here(), "/datasets/")
dat <- data.table::fread(paste0(data.dir, "diabetes_sockett_dat.txt"), fill = T)
ggplot(dat, aes(age, pep)) +
geom_point() +
geom_smooth(method = "loess")
dat
dat2 <- dat[age < 7]
dat2
dat2 <- dat[age <= 7]
dat2
lm(age ~ pep, data = dat2)
summary(fit <- lm(age ~ pep, data = dat2))
olsch4
WRS::olshc4(dat2$age, dat2$pep)
WRS::tsreg(dat2$age, dat2$pep)
WRS::tsgreg(dat2$age, dat2$pep)
WRS::olshc4(dat2$age, dat2$pep)
WRS::regci(dat2$age, dat2$pep)
dat <- data.table::fread(paste0(data.dir, "read_dat.txt"), fill = T)
dat
dat <- data.table::fread(paste0(data.dir, "read_dat.txt"), fill = T, skip = 13)
dat
spearci( dat[,4], dat[,8])
scorciMC( dat[,4], dat[,8])
alpha <- .05
qnorm(c(Lower = alpha/2, Upper = 1 - alpha/2))
b1 <- -1.5; n <- 10; se <- sqrt(35/ / 140)
b1 <- -1.5; n <- 10; se <- sqrt(35 / 140)
qt(c(Lower = alpha/2, Upper = 1 - alpha/2))
qt(c(Lower = alpha/2, Upper = 1 - alpha/2), df = n - 2)
qt(c(Lower = alpha/2, Upper = 1 - alpha/2), df = n - 2)
b1 + qt(c(Lower = alpha/2, Upper = 1 - alpha/2), df = n - 2)
b1 + qt(c(Lower = alpha/2, Upper = 1 - alpha/2), df = n - 2) * se
b1 <- -1.5; n <- 10; se <- sqrt(35 / 140)
alpha <- 1 - .98
alpha
b1 + qt(c(Lower = alpha/2, Upper = 1 - alpha/2), df = n - 2) * se
n <- 30; A <- 30; C <- 10
slope <- A / C
n <- 30; A <- 30; C <- 10;
xbar <- 15 / 30; ybar <- 30 / 30
slope <- A / C
intercept <- ybar + xbar*slope
intercept
slope + intercept
slope
slope <- A / C
intercept
ybar
xbar
xbar*slope
slope
slope - intercept
intercept
ybar
xbar
slope
ybar - xbar*slope
x <- 38; ybar <- 20; xbar <- 7
variance <- 121; A <- 180; C <- 60
slope <- A / C
slope
intercept <- ybar - xbar*slope
intercept
alpha <- 0.05
qt(c(Lower = alpha/2, Upper = 1 - alpha/2))
slope + qt(c(Lower = alpha/2, Upper = 1 - alpha/2)) * sqrt(variance / n)
slope
slope + qt(c(Lower = alpha/2, Upper = 1 - alpha/2), df = n - 2) * sqrt(variance / n)
slope
alpha <- 0.05
slope + qt(c(Lower = alpha/2, Upper = 1 - alpha/2), df = n - 2) * sqrt(variance / n)
Tval <- slope * sqrt( C / variance )
Tval
Tval
pt(Tval, df = n - 2)
pt(alpha/2, df = n - 2)
qt(alpha/2, df = n - 2)
crit <- qt(alpha/2, df = n - 2)
ifelse(abs(Tval) >= crit, "Reject Null", "Fail to Reject")
crit <- qt(alpha/2, df = n - 2)
ifelse(abs(Tval) >= crit, "Reject Null", "Fail to Reject")
slope + qt(c(Lower = alpha/2, Upper = 1 - alpha/2), df = n - 2) * sqrt(variance / n)
A
C
slope <- A / C
slope
ybar
intercept
slope
intercept
C
C
n
n <- 38; ybar <- 20; xbar <- 7
Tval <- intercept * sqrt( C *  / variance )
C * (n - 2)
variance
crit
alpha/2
crit <- qt(alpha/2, df = n - 2)
ifelse(abs(Tval) >= crit, "Reject Null", "Fail to Reject")
abs(Tval) >=
Tval <- intercept * sqrt( C * (n - 2) / variance )
crit <- qt(alpha/2, df = n - 2)
ifelse(abs(Tval) >= crit, "Reject Null", "Fail to Reject")
alpha <- 0.02
slope + qt(c(Lower = alpha/2, Upper = 1 - alpha/2), df = n - 2) * sqrt(variance / n)
Tval <- intercept * sqrt( C * (n - 2) / variance )
crit <- qt(alpha/2, df = n - 2)
ifelse(abs(Tval) >= crit, "Reject Null", "Fail to Reject")
C * (n - 2) /
C * (n - 2)
C
A * (n -2)
variance * (n -2)
1922 / n
1922 / (n - 2)
Tval <- intercept * sqrt( C * (n - 2) / variance )
Tval <- intercept * sqrt( C / variance )
Tval
Tval <- intercept * sqrt( C / variance ) * (n-2)
Tval
n * C
Tval <- intercept * sqrt( variance * 1922 / n * C )
Tval
variance * 1922
ssx <- 1922
variance
n * C
C
Tval <- intercept * sqrt( variance * C / n * ssx )
Tval
variance
C
variance
variance * ssx
Tval <- intercept * sqrt( variance * C / variance * ssx )
Tval
variance
(n - 2) * C
Tval <- intercept * sqrt( (n - 2) * C / variance * ssx )
Tval
(n - 2)
C
variance
ssx
variance
n
Tval <- intercept * sqrt( variance * ssx / n * variance )
Tval
ssx
Tval <- intercept * sqrt( (variance * ssx) / (n * variance) )
Tval
Tval <- intercept * sqrt( (variance * ssx) / ((n - 2) * variance) )
Tval
ssx
Tval <- intercept * sqrt( ((n - 2) * C) / (variance  * ssx) )
Tval
crit <- qt(alpha/2, df = n - 2)
ifelse(abs(Tval) >= crit, "Reject Null", "Fail to Reject")
alpha <- 0.02
slope + qt(c(Lower = alpha/2, Upper = 1 - alpha/2), df = n - 2) * sqrt(variance / n)
Tval <- intercept * sqrt( ((n - 2) * C) / (variance  * ssx) )
crit <- qt(alpha/2, df = n - 2)
ifelse(abs(Tval) >= crit, "Reject Null", "Fail to Reject")
crit
ifelse(abs(Tval) < crit, "Reject Null", "Fail to Reject")
abs(Tval)
ifelse(abs(Tval) < crit, "Reject Null", "Fail to Reject")
alpha <- 0.02
slope + qt(c(Lower = alpha/2, Upper = 1 - alpha/2), df = n - 2) * sqrt(variance / n)
Tval <- intercept * sqrt( ((n - 2) * C) / (variance  * ssx) )
crit <- qt(alpha/2, df = n - 2)
ifelse(abs(Tval) < crit, "Reject Null", "Fail to Reject")
intercept
slope
alpha <- .9
slope + qt(Lower = alpha/2, Upper = 1 - alpha/2, df = n - 2)
qt(Lower = alpha/2, Upper = 1 - alpha/2, df = n - 2)
slope + qt(c(Lower = alpha/2, Upper = 1 - alpha/2, df = n - 2))
slope + qt(c(Lower = alpha/2, Upper = 1 - alpha/2), df = n - 2)
slope
qt(c(Lower = alpha/2, Upper = 1 - alpha/2), df = n - 2)
c(Lower = alpha/2, Upper = 1 - alpha/2)
alpha <- 1 - .9
slope + qt(c(Lower = alpha/2, Upper = 1 - alpha/2), df = n - 2)
qt(c(Lower = alpha/2, Upper = 1 - alpha/2), df = n - 2)
C
variance
slope + qt(c(Lower = alpha/2, Upper = 1 - alpha/2), df = n - 2) * sqrt( variance / C)
n <- 41; ybar <- 10; xbar <- 12;
ssr <- 100; ssx <- 400; variance <- 144
b1 <- ssr / ssx
b1
b0 <- ybar - xbar*b1
b0
b0
b0
ybar
alpha <- 1 - .9
crit <- qt(1 - alpha/2)
crit
ssr
alpha <- 1 - .9
crit <- qt(1 - alpha/2)
crit
((n - 2) * ssr)
Tval <- b0 * sqrt( ((n - 2) * ssr) / (variance * ssx))
Tval
crit <- qt(1 - alpha/2)
crit
Tval <- b0 * sqrt( ((n - 2) * ssr) / (variance * ssx))
b1 + qt(c( Lower = alpha/2, Upper = 1 - alpha/2), df = n - 2) * sqrt( variance / ssx)
b1
b1 + qt(c( Lower = alpha/2, Upper = 1 - alpha/2), df = n - 2) * sqrt( variance / ssx)
n <- 18; b1 <- 3.1; ssx <- 144; variance <- 36
alpha <- 1 - .95
b1 + qt(c(Lower = alpha/2, Upper = 1 - alpha/2), df = n - 2) * sqrt( variance / ssx)
alpha/2
b1
n - 2
variance
ssx
b1 + qt(c(Lower = alpha/2, Upper = 1 - alpha/2), df = n - 2) * sqrt( variance / ssx )
qt(c(Lower = alpha/2, Upper = 1 - alpha/2)
qt(c(Lower = alpha/2, Upper = 1 - alpha/2), df = n - 2)
n <- 20; b0 <- 6; ssx <- 169
variance <- 25; xvar <- 90
alpha <- 1 - .95
b0 + qt(c(Lower = alpha/2, Upper = 1 - alpha/2), df = n - 2) * sqrt(variance / xvar)
xvar
b0 + qt(c(Lower = alpha/2, Upper = 1 - alpha/2), df = n - 2) * sqrt( (variance*ssx) / (n * xvar))
n <- 27; yvar <- 100; xvar <- 625
ssr <- 200; alpha <- 1 - 0.01
b0 <- ssr / xvar
b0
slope <- ssr / xvar
r <- slope * (yvar/xvar)
r
slope
ssr
ssr
xvar
slope <- ssr / sqrt( yvar * xvar )
slope
r <- slope * (yvar/xvar)
r
r <- ssr / sqrt( yvar * xvar )
ssr
sqrt( yvar * xvar )
test.stat.T <- r * sqrt( (n-2)/ (1 - r^2))
test.stat.T
crit <- qt(1 - alpha/2, df = n - 2)
crit
n - 2
alpha <- 1 - 0.01
alpha
alpha/2
1 - alpha/2
alpha/2
alpha <- 0.01
crit <- qt(1 - alpha/2, df = n - 2)
crit
ifelse(abs(test.stat.T) >= crit, "Reject Null", "Fail to Reject Null")
n <- 5; yvar <- 16; xvar <- 25
ssr <- 10; alpha <- 0.05
r <- ssr / sqrt( yvar * xvar )
test.stat.T <- r * sqrt( (n-2)/ (1 - r^2))
crit <- qt(1 - alpha/2, df = n - 2)
ifelse(abs(test.stat.T) >= crit, "Reject Null", "Fail to Reject Null")
yvar <- 64; xvar <- 100; ssr <- 40
r <- ssr / sqrt( yvar * xvar )
r
alpha <- 0.1
crit <- qnorm(c(Lower = alpha/2, Upper = 1 - alpha/2))
crit
n <- 29; yvar <- 64; xvar <- 100; ssr <- 40
alpha <- 0.1
r <- ssr / sqrt( yvar * xvar )
crit <- qt(c(Lower = alpha/2, Upper = 1 - alpha/2), df = n - 2)
crit
test.stat.t <- sqrt( (n - 2) / (1 - r^2) )
test.stat.t
n <- 29; yvar <- 64; xvar <- 100; ssr <- 40
alpha <- 0.1
r <- ssr / sqrt( yvar * xvar )
crit <- qt(c(Lower = alpha/2, Upper = 1 - alpha/2), df = n - 2)
test.stat.t <- sqrt( (n - 2) / (1 - r^2) )
test.stat.t
(1 - r^2)
(n - 2)
test.stat.t <- sqrt( (n - 2) / (1 - r^2) )
test.stat.T <- sqrt( (n - 2) / (1 - r^2) )
crit <- qt(1 - alpha/2, df = n - 2)
crit
ifelse( abs(test.stat.T) >= crit, "Reject null", "Fail to reject")
test.stat.T <- r * sqrt( (n - 2) / (1 - r^2) )
test.stat.T
r
(n - 2)
test.stat.T <- r * sqrt( (n - 2) / (1 - r^2) )
test.stat.T
test.stat.T <- r * sqrt( 3 / (1 - r^2) )
test.stat.T
test.stat.T <- r * sqrt( (n - 1) / (1 - r^2) )
test.stat.T
test.stat.T <- r * sqrt( (n - 2) / (1 - r^2) )
test.stat.T
crit
ifelse( abs(test.stat.T) >= crit, "Reject null", "Fail to reject")
set.seed(46)
x <- rnorm(30); y <- rnorm(30)
cor(x, y)
cor(3*x, y)
cor(x, y)
cor(3*x, y)
lsfit(x, y)$coef
lsfit(x, 3*y)$coef
xvar <- (x - mean(x))^2
xvar <- (x - mean(x))^2; yvar <- (y - mean(y))^2
xvar
xvar*yvar
xvar <- sum((x - mean(x))^2); yvar <- sum((y - mean(y))^2)
xvar*yvar
cov(x,y)
xvar <- sum((x - mean(x))); yvar <- sum((y - mean(y)))
xvar * yvar
xvar
cov(x,y)
sum((x - mean(x))) * sum((y - mean(y)))
( sum((x - mean(x))) * sum((y - mean(y))) / ( sum( (x - mean(x))^2) )
( sum((x - mean(x))) * sum((y - mean(y))) / ( sum( (x - mean(x))^2) )
( sum((x - mean(x))) * sum((y - mean(y)))
( sum((x - mean(x))) * sum((y - mean(y))) ) / sum( (x - mean(x))^2)
( sum((x - mean(x))) * sum((y - mean(y))) )
sum((y - mean(y)))
( sum((x - mean(x))) * sum((y - mean(y))) ) / sqrt( sum( (x - mean(x))^2) * sum( (y - mean(y))^2) )
( sum((x - mean(x))) * sum((y - mean(y))) ) / sqrt( sum( (x - mean(x))^2) * sum( (y - mean(y))^2) )
cor(x, y)
sum( (y - mean(y)) ^2 ) )
( sum((x - mean(x))) * sum((y - mean(y))) ) / sqrt( sum( (x - mean(x))^2) * sum( (y - mean(y)) ^2 ) )
( sum( (x - mean(x)) ) * sum( (y - mean(y)) ) )
( sum( (x - mean(x)) ) * sum( (y - mean(y)) ) ) / sqrt( sum( (x - mean(x))^2) * sum( (y - mean(y)) ^2 ) )

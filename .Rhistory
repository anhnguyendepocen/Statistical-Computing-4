group_by(year) %>%
group_map(~ loess(runTime ~ age, x))
cbMenSub %>%
group_by(year)
cbMenSub %>%
group_by(year) %>%
group_map(~ head(x))
cbMenSub %>%
group_by(year) %>%
group_map(~ head(.x))
cbMenSub %>%
group_by(year) %>%
group_map(~ loess(runTime ~ age, .x))
mR.models <- cbMenSub %>%
group_by(year) %>%
group_map(~ loess(runTime ~ age, .x))
mR.models
mR.models[[1]]
get_mr_pred <- function(model, year) {
results <- data.table(year = rep(year, length(age20to80)), pred = predict(model, data.frame(age = age20to80)))
return(results)
}
mR.pred <- mapply(get_mr_pred, model = mR.models, year = 1999:2012)
mR.pred
mR.pred <- lapply(mR.models, function(year, model) {
data.table(year = rep(year, length(age20to80)),
pred = predict(model, data.frame(age = age20to80)))
}, year = 1999:2012)
mR.pred
age20to80
yoy_changes
yoy_changes <- do.call("rbind", mR.pred)
yoy_changes
mR.pred <- lapply(mR.models, function(year, model) {
data.table(year = rep(year, length(age20to80)),
age = age20to80,
pred = predict(model, data.frame(age = age20to80)))
}, year = 1999:2012)
yoy_changes <- do.call("rbind", mR.pred)
yoy_changes
ggplot(yoy_changes, aes(age, pred, group = year, col = year)) +
geom_line()
ggplot(yoy_changes, aes(age, pred, group = year)) +
geom_line(aes(col = year))
ggplot(yoy_changes, aes(age, pred)) +
geom_line(aes(col = year, group = year))
yoy_changes
yoy_changes[year == 1999]
yoy_changes[year == 1999]
ggplot(yoy_changes[year == 1999], aes(age, pred)) +
geom_line(aes(col = year, group = year))
ggplot(yoy_changes[year == 1999], aes(age, pred)) +
geom_point()
yoy_changes
yoy_changes[year == 1999]
age20to80
mR.lo.pr12
mR.pred <- lapply(mR.models, function(model, year) {
data.table(year = rep(year, length(age20to80)),
age = age20to80,
pred = predict(model, data.frame(age = age20to80)))
}, year = 1999:2012)
mR.pred
mR.pred <- lapply(mR.models, function(model, year) {
data.table(year = rep(year, length(age20to80)),
age = age20to80,
pred = predict(model, data.frame(age = age20to80)))
}, year = 1999:2012)
mR.pred
rep(year, length(age20to80)
rep(year, length(age20to80))
mr <- pred(mR.models[[1]], data.frame(age = age20to80))
mR.models[[1]]
mr <- predict(mR.models[[1]], data.frame(age = age20to80))
mr
lapply(mR.models, function(m) predict(m, data.frame(age = age20to80)))
mR.pred <- lapply(mR.models, function(m) predict(m, data.frame(age = age20to80)))
yoy_changes <- do.call("rbind", mR.pred)
yoy_changes
mR.pred
yoy_changes
mR.pred <- lapply(mR.models,
function(m) cbind(rep(year, length(age20to80)), predict(m, data.frame(age = age20to80)),
year = 1999:2012)
mR.pred <- lapply(mR.models,
function(m) cbind(rep(year, length(age20to80)), predict(m, data.frame(age = age20to80)),
year = 1999:2012))
mR.pred <- lapply(mR.models,
function(m) cbind(rep(year, length(age20to80)), predict(m, data.frame(age = age20to80))),
year = 1999:2012)
mR.pred <- lapply(mR.models,
function(m, year) cbind(rep(year, length(age20to80)), predict(m, data.frame(age = age20to80))),
year = 1999:2012)
mR.pred
yoy_changes <- do.call("rbind", mR.pred)
yoy_changes
colnames(yoy_changes) <- c("year", "pred")
yoy_changes
ggplot(yoy_changes[year == 1999], aes(age, pred)) +
geom_point()
mR.pred <- lapply(mR.models,
function(m, y, a) cbind(rep(y, length(a)), age = a, predict(m, data.frame(age = a))),
year = 1999:2012,
age = age20to80)
mR.pred <- lapply(mR.models,
function(m, year, age) cbind(rep(year, length(a)), age = age, predict(m, data.frame(age = age))),
year = 1999:2012,
age = age20to80)
mR.pred <- lapply(mR.models,
function(m, year, age) cbind(rep(year, length(age)), age = age, predict(m, data.frame(age = age))),
year = 1999:2012,
age = age20to80)
mR.pred
yoy_changes <- do.call("rbind", mR.pred)
colnames(yoy_changes) <- c("year", "pred")
yoy_changes <- do.call("rbind", mR.pred)
colnames(yoy_changes) <- c("year", "age", "pred")
yoy_changes
ggplot(yoy_changes[year == 1999], aes(age, pred)) +
geom_point()
yoy_changes[year == 1999]
yoy_changes
mR.pred <- lapply(mR.models,
function(m, year, age) data.table(rep(year, length(age)), age = age, predict(m, data.frame(age = age))),
year = 1999:2012,
age = age20to80)
mR.pred
yoy_changes <- do.call("rbind", mR.pred)
colnames(yoy_changes) <- c("year", "age", "pred")
yoy_changes
ggplot(yoy_changes[year == 1999], aes(age, pred)) +
geom_point()
yoy_changes
mR.pred <- lapply(mR.models,
function(m, year, age) c(rep(year, length(age)), age = age, predict(m, data.frame(age = age))),
year = 1999:2012,
age = age20to80)
mR.pred
mR.pred <- lapply(mR.models,
function(m, year, age) cbind(rep(year, length(age)), age = age, predict(m, data.frame(age = age))),
year = 1999:2012,
age = age20to80)
mR.pred
yoy_changes <- matrix(mR.pred, ncol = 3)
mR.pred
yoy_changes <- as.matrix(mR.pred, ncol = 3)
yoy_changes
matrix(mR.pred)
yoy_changes <- as.data.frame(mR.pred)
yoy_changes
yoy_changes <- matrix(mR.pred, byrow = T)
yoy_changes
class(mR.pred)
yoy_changes <- data.table(unlist(mR.pred))
yoy_changes
yoy_changes <- matrix(unlist(mR.pred))
yoy_changes
yoy_changes <- matrix(unlist(mR.pred), ncol = 3)
yoy_changes
yoy_changes <- matrix(unlist(mR.pred), ncol = 3)
colnames(yoy_changes) <- c("year", "pred", "age")
yoy_changes
yoy_changes <- as.data.frame(yoy_changes)
yoy_changes
colnames(yoy_changes) <- c("year", "pred", "age")
ggplot(yoy_changes[year == 1999], aes(age, pred)) +
geom_point()
yoy_changes
yoy_changes[year == 1999]
yoy_changes$year <- as.numeric(yoy_changes$year)
yoy_changes[year == 1999]
ggplot(yoy_changes[year == 1999], aes(age, pred)) +
geom_point()
mR.models <- cbMenSub %>%
group_by(year) %>%
group_map(~ loess(runTime ~ age, .x))
mR.pred <- lapply(mR.models,
function(m, year, age) cbind(rep(year, length(age)), age = age, predict(m, data.frame(age = age))),
year = 1999:2012,
age = age20to80)
yoy_changes <- matrix(unlist(mR.pred), ncol = 3)
yoy_changes
yoy_changes
yoy_changes <- matrix(unlist(mR.pred), ncol = 3)
yoy_changes <- as.data.frame(yoy_changes)
yoy_changes
colnames(yoy_changes) <- c("year", "pred", "age")
yoy_changes$year <- as.numeric(yoy_changes$year)
yoy_changes
ggplot(yoy_changes[year == 1999], aes(age, pred)) +
geom_point()
yoy_changes[year == 1999]
yoy_changes[year == 1999,]
yoy_changes
length(age20to80)
mR.models
mR.models
mR.models[[1]]
mR.pred <- lapply(mR.models,
function(m, year, age) cbind(rep(year, length(age)), age = age, predict(m, data.frame(age = age))),
year = 1999:2012,
age = age20to80)
mR.pred
length(mR.pred)
mR.pred
nrow(mR.pred)
count(mR.pred)
mR.pred
mR.pred <- lapply(mR.models,
function(m, year, age) {
data.table(Year = rep(year, length(age)), Age = age, Pred = predict(m, data.frame(age = age)))
},
year = 1999:2012,
age = age20to80)
mR.pred
yoy_changes <- matrix(unlist(mR.pred[[1]]), ncol = 3)
yoy_changes
mR.pred <- mapply(mR.models,
function(m, year, age) {
data.table(Year = rep(year, length(age)), Age = age, Pred = predict(m, data.frame(age = age)))
},
year = 1999:2012,
age = age20to80)
mR.pred
cbMenSub
years <- 1999:2012
results <- list()
for( y in years )
{
data <- cbMenSub[year == y]
model <- loess(runTime ~ age, data)
pred <- predict(model, newdata = age20to80)
results[[y]] <- data.table(Year = rep(y, nrow(pred)), Age = age20to80, Pred = pred)
}
y <- 1999
data <- cbMenSub[year == y]
data
cbMenSub
data <- cbMenSub[ which(cbMenSub$year == y) ]
data <- cbMenSub[ which(cbMenSub$year == y), ]
data
model <- loess(runTime ~ age, data)
pred <- predict(model, newdata = age20to80)
pred
results[[y]] <- data.table(Year = rep(y, nrow(pred)), Age = age20to80, Pred = pred)
nrow(pred)
length(pred)
results[[y]] <- data.table(Year = rep(y, length(pred)), Age = age20to80, Pred = pred)
results
length(years)
years <- 1999:2012
results <- list(length(years))
results
results
for( y in years )
{
data <- cbMenSub[ which(cbMenSub$year == y), ]
model <- loess(runTime ~ age, data)
pred <- predict(model, newdata = age20to80)
results[[y]] <- data.table(Year = rep(y, length(pred)), Age = age20to80, Pred = pred)
}
results
results <- list(length(years))
results
years <- 1999:2012
results <- list(length(years))
y <- 1999
for( i in 1:length(years) )
{
y = years[i]
data <- cbMenSub[ which(cbMenSub$year == y), ]
model <- loess(runTime ~ age, data)
pred <- predict(model, newdata = age20to80)
results[[y]] <- data.table(Year = rep(y, length(pred)), Age = age20to80, Pred = pred)
}
results
years <- 1999:2012
results <- list(length(years))
y <- 1999
for( i in 1:length(years) )
{
y = years[i]
data <- cbMenSub[ which(cbMenSub$year == y), ]
model <- loess(runTime ~ age, data)
pred <- predict(model, newdata = age20to80)
results[[i]] <- data.table(Year = rep(y, length(pred)), Age = age20to80, Pred = pred)
}
results
results
race_years_data <- do.call("rbind", results)
race_years_data
ggplot(race_years_data, aes(Age, Pred)) +
geom_point()
plot(mR.lo.pr99 ~ age20to80,
type = "l", col = "purple", lwd = 3,
xlab = "Age (years)", ylab = "Fitted Run Time (minutes)")
plot(mR.lo.pr99 ~ age20to80,
type = "l", col = "purple", lwd = 3,
xlab = "Age (years)", ylab = "Fitted Run Time (minutes)")
lines(x = age20to80, y = mR.lo.pr12,
col = "green", lty = 2, lwd = 3)
ggplot(race_years_data[Year == 1999], aes(Age, Pred)) +
geom_point()
ggplot(race_years_data[Year == 1999], aes(Age, Pred)) +
geom_line()
ggplot(race_years_data, aes(Age, Pred)) +
geom_line()
ggplot(race_years_data, aes(Age, Pred, group = Year)) +
geom_line()
ggplot(race_years_data, aes(Age, Pred, group = Year)) +
geom_line(aes(col = Year))
ggplot(race_years_data, aes(Age, Pred, group = Year)) +
geom_line(aes(col = Year)) +
geom_smooth()
ggplot(race_years_data, aes(Age, Pred, group = Year)) +
geom_line(aes(col = Year)) +
geom_smooth(alpha = .3)
ggplot(race_years_data, aes(Age, Pred, group = Year)) +
geom_line(aes(col = Year)) +
geom_smooth(alpha = .25)
ggplot(race_years_data, aes(Age, Pred, group = Year)) +
geom_line(aes(col = Year))
ggplot(race_years_data, aes(Age, Pred, group = Year)) +
geom_line(aes(col = Year)) +
labs("Predicted Performance by Year", ylab = "Predicted Run Time", xlab = "Runner Age")
ggplot(race_years_data, aes(Age, Pred, group = Year)) +
geom_line(aes(col = Year)) +
labs(title = "Predicted Performance by Year", ylab = "Predicted Run Time", xlab = "Runner Age")
trimBlanks <- function(charVector) {
nameClean <- gsub("^[[:blank:]]+", "", charVector)
nameClean <- gsub("[[:blank:]]+$", "", nameClean)
nameClean <- gsub("[[:blank:]]+", " ", nameClean)
}
nameClean <- trimBlanks(cbSubMen$name)
nameClean <- trimBlanks(cbMenSub$name)
nameClean
length(nameClean)
length(unique(nameClean))
table(table(nameClean))
head(sort(table(cleanName)), decreasing = T), 1)
head(sort(table(cleanName), decreasing = T), 1)
head(sort(table(nameClean), decreasing = T), 1)
mSmith <- cbMenSub[nameClean == "MichaelSmith", ]
mSmith
mSmith <- cbMenSub[nameClean == "Michael Smith", ]
mSmith
head(unique(mSmith$home))
nameClean <- tolower(nameClean)
head(sort(table(nameClean), decreasing = T), 1)
table(table(nameClean))
nameClean <- gsub("[,.]", "", nameClean)
tabNameYr <- table(cbMenSub$year, nameClean)
max(tabNameYr)
class(tabNameYr)
names(tabNameYr)
mode(tabNameYr)
names(attributes(tabNameYr))
dim(tabNameYr)
head(colnames(tabNameYr), 3)
which(tabNameYr == max(tabNameYr))
which(tabNameYr == max(tabNameYr), arr.ind = T)
indMax <- which(tabNameYr == max(tabNameYr), arr.ind = T)
colnames(tabNameYr)[indMax[2]]
cbMenSub$nameClean <- nameClean
cbfMenSub$yob <- cbMenSub$year - cbMenSub$age
cbfMenSub
cbMenSub$yob <- cbMenSub$year - cbMenSub$age
cbMenSub
homeClean <- trimBlanks(cbSubMen$home)
homeClean <- trimBlanks(cbMenSub$home)
homeClean
table(table(homeClean))
table(homeClean)
cbMenSub$homeClean <- home
cbMenSub
cbMenSub$homeClean <- home
cbMenSub$homeClean <- homeClean
cbMenSub
mb <- which(nameClean == "michael brown")
birthOrder <- order(cbMenSub$yob[mb])
vars <- c("year", "homeClean", "nameClean", "yob", "runTime")
mb <- which(nameClean == "michael brown")
birthOrder <- order(cbMenSub$yob[mb])
cbMenSub[mb[birthOrder], vars]
homeClean <- trimBlanks(cbMenSub$home)
homeClean <- tolower(homeClean)
table(homeClean)
vars <- c("year", "homeClean", "nameClean", "yob", "runTime")
mb <- which(nameClean == "michael brown")
birthOrder <- order(cbMenSub$yob[mb])
cbMenSub[mb[birthOrder], vars]
table(homeClean)
table(table(homeClean))
cbMenSub$homeClean <- homeClean
vars <- c("year", "homeClean", "nameClean", "yob", "runTime")
mb <- which(nameClean == "michael brown")
birthOrder <- order(cbMenSub$yob[mb])
cbMenSub[mb[birthOrder], vars]
cbMenSub$ID = paste(nameClean, cbMenSub$yob, sep = "_")
races <- tapply(cbMenSub$year, cbMenSub$ID, length)
races
races8 <- names(races)[which(races >= 8)]
races8
men8 <- cbMenSub[ cbMenSub$ID %in% races8, ]
men8
orderByRunner <- order(men8$ID, men8$year)
men8 <- men8[orderByRunner, ]
men8
orderByRunner <- order(men8$ID, men8$year)
men8 <- men8[orderByRunner, ]
men8 <- cbMenSub[ cbMenSub$ID %in% races8, ]
orderByRunner <- order(men8$ID, men8$year)
men8 <- men8[orderByRunner, ]
men8L <- split(men8, men8$ID)
names(men8L)
length(unique(men8$ID))
length(men8L)
gapTime <- tapply(men8$runTime, men8$ID,
function(t) any(abs(diff(t)) > 20))
gapTime
gapTime <- sapply(men8L, function(df)
any(abs(diff(df$runTime)) > 20))
gapTime
sum(gapTime)
lapply(men8L[ gapTime ][1:2], function(df) df[, vars])
homeLen <- nchar(cbMenSub$homeClean)
cbMenSub$state <- substr(cbMenSub$homeClean,
start = homeLen - 1, stop = homeLen)
cbMenSub
cbMenSub$state[cbMenSub$year == 2006] = NA
cbMenSub$ID = paste(cbMenSub$nameClean, cbMenSub$yob,
cbMenSub$state, sep = "_")
numRaces <- tapply(cbMenSub$year, cbMenSub$ID, length)
races8 <- names(numRacees)[which(numRaces >= 8)]
numRaces <- tapply(cbMenSub$year, cbMenSub$ID, length)
races8 <- names(numRacees)[which(numRaces >= 8)]
men8 <- cbMenSub[ cbMenSub$ID %in% races8, ]
orderByRunner <- order(men8$ID, men8$year)
men8 <- men8[orderByRunner, ]
numRaces <- tapply(cbMenSub$year, cbMenSub$ID, length)
races8 <- names(numRacees)[which(numRaces >= 8)]
men8 <- cbMenSub[ cbMenSub$ID %in% races8, ]
orderByRunner <- order(men8$ID, men8$year)
races8 <- names(numRacees)[which(numRaces >= 8)]
numRaces <- tapply(cbMenSub$year, cbMenSub$ID, length)
numRaces <- tapply(cbMenSub$year, cbMenSub$ID, length)
races8 <- names(numRaces)[which(numRaces >= 8)]
men8 <- cbMenSub[ cbMenSub$ID %in% races8, ]
orderByRunner <- order(men8$ID, men8$year)
men8 <- men8[orderByRunner, ]
men8L <- split(men8, men8$ID)
names(men8L) <- races8
length(men8L)
file2001 <- load_results("men", 2001)
age2001 <- as.numeric(extractVariables(file2001)[, "ag"])
badAgeIndex <- which(is.na(age2001)) + 5
file2001[badAgeIndex]
badAgeIndex
blanks <- grep("^[[:blank:]]*$", file2001)
blanks
which(age2001 < 5)
file2001[which(age2001 < 5)]
file <- read_results("men", 2001)
data <- extractVariables(file)
mR.lo99 <- loess(runTime ~ age, cbMenSub[ cbMenSub$year == 1999,])
mR.lo.pr99 <- predict(mR.lo99, data.frame(age = age20to80))
summary(mR.lo12)
mR.lo12 <- loess(runTime ~ age, cbMenSub[ cbMenSub$year == 2012, ])
mR.lo.pr12 <- predict(mR.lo12, data.frame(age = age20to80))
plot(mR.lo.pr99 ~ age20to80,
type = "l", col = "purple", lwd = 3,
xlab = "Age (years)", ylab = "Fitted Run Time (minutes)")
lines(x = age20to80, y = mR.lo.pr12,
col = "green", lty = 2, lwd = 3)
legend("topleft", col = c("purple", "green"), lty = 1:2, lwd = 3,
legend =  c("1999", "2012"), bty = "n")
nums <- 1:20
nums
rand <- sample(nums, length(nums), replace = F)
rand
paste(rand, ",")
sapply(rand, function(x) paste(x, ","))
sapply(rand, function(x) paste(x, ","))
res <- character()
res <- "["
for( i in 1:length(rand)) {
res <- paste(res, rand[i], ",")
}
res <- res + "]"
res
res <- "["
for( i in 1:length(rand)) {
res <- paste0(res, rand[i], ",")
}
res
install.packages(c("backports", "bayestestR", "broom", "btergm", "callr", "caret", "classInt", "countrycode", "DALEX", "dbplyr", "devtools", "diffobj", "DT", "effectsize", "emmeans", "factoextra", "fda", "foreach", "forecast", "fs", "future", "gdtools", "GGally", "ggeffects", "ggfortify", "ggstance", "glue", "gtools", "h2o", "Hmisc", "htmltab", "igraph", "iml", "insight", "isoband", "joineRML", "jtools", "lattice", "lme4", "lubridate", "MASS", "mclust", "mcmc", "multcomp", "padr", "parameters", "performance", "pkgbuild", "plotly", "purrr", "quantmod", "quantreg", "raster", "Rcpp", "RcppArmadillo", "RCurl", "reshape2", "reticulate", "rex", "rgl", "rJava", "robustbase", "RQuantLib", "rsample", "sf", "sfsmisc", "sjmisc", "skimr", "sn", "survey", "systemfonts", "TeachingDemos", "tibble", "timetk", "tinytex", "usethis", "vcd", "vip", "withr", "wrapr", "xergm.common", "xfun", "XLConnect", "xml2"))
install.packages(c("boot", "class", "KernSmooth", "lattice", "MASS", "nlme", "nnet", "spatial", "survival"), lib="C:/R/R-3.6.3/library")
install.packages(c("backports", "bayestestR", "broom", "btergm", "callr", "caret", "classInt", "countrycode", "DALEX", "dbplyr", "devtools", "diffobj", "DT", "effectsize", "emmeans", "factoextra", "fda", "foreach", "forecast", "foreign", "fs", "future", "gdtools", "GGally", "ggeffects", "ggfortify", "ggstance", "glue", "gtools", "h2o", "Hmisc", "htmltab", "igraph", "iml", "insight", "isoband", "joineRML", "jtools", "lattice", "lme4", "lubridate", "MASS", "mclust", "mcmc", "multcomp", "padr", "parameters", "performance", "pkgbuild", "plotly", "purrr", "quantmod", "quantreg", "raster", "Rcpp", "RcppArmadillo", "RCurl", "reshape2", "reticulate", "rex", "rgl", "rJava", "robustbase", "RQuantLib", "rsample", "sf", "sfsmisc", "sjmisc", "skimr", "sn", "survey", "systemfonts", "TeachingDemos", "tibble", "timetk", "tinytex", "usethis", "vcd", "vip", "withr", "wrapr", "xergm.common", "xfun", "XLConnect", "xml2"))
Sys.which("make")
Sys.which("make")
Sys.which("make")
Sys.which("make")
("make")
Sys.which("make")
Sys.which("make")
Sys.which("make")
Sys.which("make")
Sys.which("make")
Sys.which("make")
Sys.which("make")
Sys.which("make")
install.packages(c("broom", "foreign", "ggfortify", "jtools", "MASS", "pkgbuild", "tibble", "xml2"))

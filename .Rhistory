assignInNamespace("cedta.pkgEvalsUserCode", c(data.table:::cedta.pkgEvalsUserCode, "rtvs"), "data.table")
library(here, quietly = T, warn.conflicts = F)
library(ggplot2, quietly = T, warn.conflicts = F)
library(ggrepel, quietly = TRUE, warn.conflicts = FALSE)
library(ggthemes, quietly = TRUE, warn.conflicts = FALSE)
library(knitr, quietly = TRUE, warn.conflicts = FALSE)
library(kableExtra, quietly = TRUE, warn.conflicts = FALSE)
library(scales, quietly = TRUE, warn.conflicts = FALSE)
library(pander, quietly = TRUE, warn.conflicts = FALSE)
library(dplyr, quietly = TRUE, warn.conflicts = FALSE)
library(formattable, quietly = TRUE, warn.conflicts = FALSE)
library(grid, quietly = TRUE, warn.conflicts = FALSE)
library(gridExtra, quietly = TRUE, warn.conflicts = FALSE)
library(WRS, quietly = TRUE, warn.conflicts = FALSE)
options(tinytex.verbose = TRUE)
suppressMessages(library("tidyverse"))
pretty_kable <- function(data, title, dig = 2) {
kable(data, caption = title, digits = dig) %>%
kable_styling(bootstrap_options = c("striped", "hover")) %>%
kableExtra::kable_styling(latex_options = "hold_position")
}
theme_set(theme_light())
# Theme Overrides
theme_update(axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
plot.title = element_text(hjust = 0.5, size = 16, face = "bold", color = "darkgreen"),
axis.title = element_text(face = "bold", size = 12, colour = "steelblue4"),
plot.subtitle = element_text(face = "bold", size = 8, colour = "darkred"),
legend.title = element_text(size = 12, color = "darkred", face = "bold"),
legend.position = "right", legend.title.align=0.5,
panel.border = element_rect(linetype = "solid",
colour = "lightgray"),
plot.margin = unit(c( 0.1, 0.1, 0.1, 0.1), "inches"))
data.dir <- paste0(here::here(), "/datasets/")
dat <- data.table(
M1 = c(132, 204, 603, 50, 125, 90, 185, 134),
M2 = c(92, -42, 121, 63, 182, 101, 294, 36))
t.test(dat$M1, dat$M2)
t.test(dat$M1, dat$M2, conf.level = .95)
t.test(dat$M1, dat$M2, conf.level = .95)
dat <- data.table(
M1 = c(11.1, 12.2, 15.5, 17.6, 13.0, 7.5, 9.1, 6.6, 9.5, 18.0, 12.6),
M2 = c(18.2, 14.1, 13.8, 12.1, 34.1, 12.0, 14.1, 14.5, 12.6, 12.5, 19.8, 13.4, 16.8, 14.1, 12.9))
t.test(dat$M1, dat$M2, conf.level = .95)
twobinom(15, 24, 23, 42)
twobicipv(15,24,23,42)
twobicipv(20, 98, 30, 70)
# Storer-Kim
twobinom(20, 98, 30, 70)
# Beal's
twobicipv(20, 98, 30, 70)
# Storer-Kim
twobinom(20, 98, 30, 70)
# Beal's
twobicipv(20, 98, 30, 70)
p1 <- 20/121; p2 <- 15/80
p1 <- 20/121; p2 <- 15/80
Z <- (p1-p2)/sqrt(p1*(1-p1)/121 + p2*(1-p2)/80)
Z
crit <- qnorm(0.05)
crit
crit <- qnorm(0.05/2)
crit
ifelse(abs(Z) >= crit, "Reject Null", "Fail To Reject")
p1 <- 20/121; p2 <- 15/80
Z <- (p1-p2)/sqrt(p1*(1-p1)/121 + p2*(1-p2)/80)
crit <- qnorm(0.05/2)
ifelse(abs(Z) >= crit, "Reject Null", "Fail To Reject")
crit
dat <- data.table(
X1 = c(22, 23, 12, 11, 30, 22, 7, 42, 24, 33, 28, 19, 4, 34, 15, 26, 50, 27, 20, 30, 14, 42),
X2 = c(17, 22, 16, 16, 14, 29, 20, 20, 19, 14, 10, 8, 26, 9, 14, 17, 21, 16, 14, 11, 14, 11, 29, 13, 4, 16, 16, 7, 21)
)
t.test(dat$X1, dat$X2)
t.test(dat$X1, dat$X2, var.equal = T)
msmed(dat$X1, dat$X2)
msmed(dat$X1, dat$X2)
dat <- data.table(
X1 = c(22, 23, 12, 11, 30, 22, 7, 42, 24, 33, 28, 19, 4, 34, 15, 26, 50, 27, 20, 30, 14, 42),
X2 = c(17, 22, 16, 16, 14, 29, 20, 20, 19, 14, 10, 8, 26, 9, 14, 17, 21, 16, 14, 11, 14, 11, 29, 13, 4, 16, 16, 7, 21)
)
t.test(dat$X1, dat$X2)
t.test(dat$X1, dat$X2, var.equal = T)
msmed(dat$X1, dat$X2)
medpb2(x,y)
medpb2(dat$X1, dat$X2)
dat <- data.table(
X1 = c(22, 23, 12, 11, 30, 22, 7, 42, 24, 33, 28, 19, 4, 34, 15, 26, 50, 27, 20, 30, 14, 42),
X2 = c(17, 22, 16, 16, 14, 29, 20, 20, 19, 14, 10, 8, 26, 9, 14, 17, 21, 16, 14, 11, 14, 11, 29, 13, 4, 16, 16, 7, 21)
)
t.test(dat$X1, dat$X2)
t.test(dat$X1, dat$X2, var.equal = T)
medpb2(dat$X1, dat$X2)
twobinom(11,23,10,23)
dat <- data.table::fread(paste0(data.dir, "salk_dat.txt"), fill = T, sep = "&")
dat
salk <- data.table::fread(paste0(data.dir, "salk_dat.txt"), fill = T, sep = "&")
t.test(salk[,1],salk[,2])
salk
salk <- data.table::fread(paste0(data.dir, "salk_dat.txt"), fill = T, sep = ",")
salk
t.test(salk[,1],salk[,2])
salk <- data.table::fread(paste0(data.dir, "salk_dat.txt"), fill = T)
salk
t.test(salk[,1],salk[,2])
dana <- data.table::fread(paste0(data.dir, "data_dat.txt"), fill = T)
dana <- data.table::fread(paste0(data.dir, "dana_dat.txt"), fill = T)
yuen(dana[,1],dana[,2])
g1=c(2, 4, 4, 2, 2, 2, 4, 3, 2, 4, 2, 3, 2, 4, 3, 2, 2, 3, 5, 5, 2, 2)
g2=c(5, 1, 4, 4, 2, 3, 3, 1, 1, 1, 1, 2, 2, 1, 1, 5, 3, 5)
disc2com(g1,g2)
g1 <- c(3, 5, 2, 4, 8, 4, 3, 9)
g2 <- c(4, 4, 3, 8, 7, 4, 2, 5)
g3 <- c(6, 7, 8, 6, 7, 9, 10, 9)
data <- data.table(g1, g2, g3)
data
g1 <- c(3, 5, 2, 4, 8, 4, 3, 9)
g2 <- c(4, 4, 3, 8, 7, 4, 2, 5)
g3 <- c(6, 7, 8, 6, 7, 9, 10, 9)
data <- data.table(g1, g2, g3)
library(data.table, quietly = TRUE, warn.conflicts = FALSE)
assignInNamespace("cedta.pkgEvalsUserCode", c(data.table:::cedta.pkgEvalsUserCode, "rtvs"), "data.table")
library(here, quietly = T, warn.conflicts = F)
library(ggplot2, quietly = T, warn.conflicts = F)
library(ggrepel, quietly = TRUE, warn.conflicts = FALSE)
library(ggthemes, quietly = TRUE, warn.conflicts = FALSE)
library(knitr, quietly = TRUE, warn.conflicts = FALSE)
library(kableExtra, quietly = TRUE, warn.conflicts = FALSE)
library(scales, quietly = TRUE, warn.conflicts = FALSE)
library(pander, quietly = TRUE, warn.conflicts = FALSE)
library(dplyr, quietly = TRUE, warn.conflicts = FALSE)
library(formattable, quietly = TRUE, warn.conflicts = FALSE)
library(grid, quietly = TRUE, warn.conflicts = FALSE)
library(gridExtra, quietly = TRUE, warn.conflicts = FALSE)
library(WRS, quietly = TRUE, warn.conflicts = FALSE)
options(tinytex.verbose = TRUE)
suppressMessages(library("tidyverse"))
pretty_kable <- function(data, title, dig = 2) {
kable(data, caption = title, digits = dig) %>%
kable_styling(bootstrap_options = c("striped", "hover")) %>%
kableExtra::kable_styling(latex_options = "hold_position")
}
theme_set(theme_light())
# Theme Overrides
theme_update(axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
plot.title = element_text(hjust = 0.5, size = 16, face = "bold", color = "darkgreen"),
axis.title = element_text(face = "bold", size = 12, colour = "steelblue4"),
plot.subtitle = element_text(face = "bold", size = 8, colour = "darkred"),
legend.title = element_text(size = 12, color = "darkred", face = "bold"),
legend.position = "right", legend.title.align=0.5,
panel.border = element_rect(linetype = "solid",
colour = "lightgray"),
plot.margin = unit(c( 0.1, 0.1, 0.1, 0.1), "inches"))
data.dir <- paste0(here::here(), "/datasets/")
g1 <- c(3, 5, 2, 4, 8, 4, 3, 9)
g2 <- c(4, 4, 3, 8, 7, 4, 2, 5)
g3 <- c(6, 7, 8, 6, 7, 9, 10, 9)
data <- data.table(g1, g2, g3)
means <- colMeans(data)
means
sds <- apply(data, 2, sd)
sds
sds <- apply(data, 2, sd) ** 2
sds
g1 <- c(3, 5, 2, 4, 8, 4, 3, 9)
g2 <- c(4, 4, 3, 8, 7, 4, 2, 5)
g3 <- c(6, 7, 8, 6, 7, 9, 10, 9)
data <- data.table(g1, g2, g3)
means <- colMeans(data)
sds <- apply(data, 2, sd) ** 2
grand.mean <- mean(data)
mean(data)
data
means
sds
sds <- apply(data, 2, sd^2)
means <- colMeans(data)
sds <- apply(data, 2, sd) ** 2
sds
n <- ncol(data)
n
sum(data)
grand.mean <- 1/n * sum(data)
grand.mean
grand.mean <- 1/n * sum(means)
grand.mean
#### 10.2
#### 10.3
#### 10.4
#### 10.5
#### 10.6
#### 10.7
#### 10.8
#### 10.9
#### 10.10
#### 10.11
#### 10.12
#### 10.13
#### 10.15
#### 10.16
#### 10.17
#### 10.18
#### 10.19
#### 10.20
#### 10.21
#### 10.22
#### 10.23
#### 10.24
#### 10.25
#### 10.26
#### 10.27
#### 10.28
#### 10.29
#### 10.30
grand.mean
gm <- 1/n * sum(means)
gm <- 1/n * sum(means)
var <- 1/(n-1) * (gm - means)^2
var
sum( (gm - means)^2 )
gm <- 1/n * sum(means)
var <- 1/(n-1) * sum( (gm - means)^2 )
var
gm
gm <- 1/n * sum(means)
gv <- 1/(n-1) * sum( (gm - means)^2 )
gv
gm
gm <- 1/n * sum(means)
gv <- 1/(n-1) * sum( (gm - means)^2 )
anova(data)
anova1(data)
gv <- 1/(n-1) * sum( (gm - means)^2 )
gv
gv <- 1/n * sum( (gm - means)^2 )
gv
sds
gv <- sds/ncol(data)
gv
sds
gv <- sum(sds)/ncol(data)
gv
# mean squares between groups:
sum(sds)/ncol(data)
# mean squares between groups:
sum(sds)/ncol(data)
anova1(data)
t1way(data)
t1way(data, tr = 0)
test <- t1way(data, tr = 0)
assertthat::are_equal(round(test$TEST, 2) == 7.7)
test <- t1way(data, tr = 0)
assertthat::are_equal(round(test$TEST, 2) == 7.7)
assertthat::are_equal(round(test$TEST, 2), 7.7)
round(test$TEST, 2)
assertthat::are_equal(round(test$TEST, 2), 7.77)
assertthat::are_equal(round(test$TEST, 2), 7.77)
test
assertthat::are_equal(round(test$TEST, 2), 7.77)
assertthat::are_equal(test$nu1, 2)
assertthat::are_equal(round(test$nu2, 2), 13.4)
assertthat::are_equal(round(test$TEST, 2), 7.77)
assertthat::are_equal(test$nu1, 2)
assertthat::are_equal(round(test$nu2, 2), 13.4)
g1 <- c()
g1 <- c(15, 17, 22)
g2 <- c(2: 9, 12, 15)
g3 <- c(17, 20, 23)
g4 <- c(13, 12, 17)
g1 <- c(15, 17, 22)
g2 <- c(2: 9, 12, 15)
g3 <- c(17, 20, 23)
g4 <- c(13, 12, 17)
g2
g3
g4
data <- data.table(g1, g2, g3, g4)
data
data
data <- data.table(g1, g2, g3, g4)
g1 <- c(15, 17, 22)
g2 <- c(2, 9, 12, 15)
g3 <- c(17, 20, 23)
g4 <- c(13, 12, 17)
data <- data.table(g1, g2, g3, g4)
g1 <- c(15, 17, 22)
g2 <- c(9, 12, 15)
g3 <- c(17, 20, 23)
g4 <- c(13, 12, 17)
data <- data.table(g1, g2, g3, g4)
data
aov(data)
?aov
anova(data)
?anova
?anova(data$g1, data$g2)
anova(data$g1, data$g2)
anova1(data)
data <- data.table(g1, g2, g3)
anova1(data)
g1 <- c(3, 5, 2, 4, 8, 4, 3, 9)
g2 <- c(4, 4, 3, 8, 7, 4, 2, 5)
g3 <- c(6, 7, 8, 6, 7, 9, 10, 9)
data <- data.table(g1, g2, g3)
anova1(data)
anova1(data)
# mean squares between groups:
sum(sds)/ncol(data)
test <- t1way(data, tr = 0)
anova <- anova1(data)
anova$p.value < 0.05
ifelse(anova$p.value < 0.05, "Reject", "Fail to Reject")
anova <- anova1(data)
anova
ifelse(anova$p.value < 0.05, "Reject", "Fail to Reject")
test <- t1way(data, tr = 0)
assertthat::are_equal(round(test$TEST, 2), 7.77)
assertthat::are_equal(test$nu1, 2)
assertthat::are_equal(round(test$nu2, 2), 13.4)
anova1(data)
g1 <- c(15, 17, 22)
g2 <- c(9, 12, 15)
g3 <- c(17, 20, 23)
g4 <- c(13, 12, 17)
data <- data.table(g1, g2, g3, g4)
anova1(data)
anova <- anova1(data)
anova
data
ggplot(data) +
geom_boxplot()
stack(data)
ggplot(stack(data)) +
geom_boxplot(aes(ind, values))
ggplot(stack(data)) +
geom_boxplot(aes(ind, values, color = ind))
ggplot(stack(data)) +
geom_boxplot(aes(ind, values, fill = ind))
ifelse(anova$p.value < 0.05, "Reject Null", "Fail to Reject")
var <- apply(data, 2, var)
var <- apply(data, 2, var)
var
var <- mean( apply(data, 2, var) )
var
mean( apply(data, 2, var) )
t1way(data)
anova <- t1way(data)
w <- t1way(data)
w
w <- t1way(data)
assertthat::are_equal(round(w$p.value, 3), 0.124)
data
t1way(data, tr = .2)
SSBG <- 20; SSWG <- 150
f.stat <- SSBG / SSWG
f.stat
f.stat <- SSWG / SSBG
f.stat
f.stat
SSWG
f.stat / 5
f.stat
SSBG <- 20; SSWG <- 150
SSBG <- 20; SSWG <- 150
f.stat <- SSWG / SSBG
n <- 15; j <- 2
SSBG <- 20; SSWG <- 150
SSBG
f.stat <- SSWG / SSBG
f.stat
n <- 15; j <- 5
SSBG <- 20; SSWG <- 150
f.stat / 5
f.stat / 4
f.stat <- SSBG / SSWG
f.stat
f.stat <- SSBG / SSWG * 5
f.stat
SSBG / SSWG
f.stat <- 1/5 * SSBG / SSWG
f.stat
MSBG <- SSBG / j
MSBG
MSBG <- SSBG / (j -1); MSWG <- SSWG
MSBG
MSBG <- SSBG / (j -1); MSWG <- SSWG / (n - j)
f.stat <- MSBG / MSWG
f.stat
MSWG
MSBG
MSWG
MSBG <- SSBG / (j -1); MSWG <- SSWG / (n - j)
n <- 15; j <- 5
SSBG <- 20; SSWG <- 150
MSBG <- SSBG / (j -1); MSWG <- SSWG / (n - j)
f.stat <- MSBG / MSWG
f.stat
MSBG
qf(f.stat, j - 1, j * n - j)
f.stat
MSBG
MSBG
MSBG <- SSBG / (j -1); MSWG <- SSWG / (n * j - j)
f.stat <- MSBG / MSWG
f.stat
n <- 15; j <- 5
SSBG <- 20; SSWG <- 150
MSBG <- SSBG / (j -1); MSWG <- SSWG / (n * j - j)
f.stat <- MSBG / MSWG
qf(f.stat, j - 1, j * n - j)
j - 1
j * n - j
qf(0.05, j - 1, j * n - j)
qf(0.05/2, j - 1, j * n - j)
qf(1 - 0.05/2, j - 1, j * n - j)
1 - 0.05
qf(1 - 0.05, j - 1, j * n - j)
crit.val <- qf(1 - 0.05, j - 1, j * n - j)
ifelse(f < crit.val, "Reject", "Fail to Reject")
ifelse(f.stat < crit.val, "Reject", "Fail to Reject")
ifelse(f.stat > crit.val, "Reject", "Fail to Reject")
f.stat > crit.val
ifelse(f.stat > crit.val, "Reject", "Fail to Reject")
vals <- range(-3, 3, by = .01)
vals
vals <- seq(-3, 3, by = .01)
vals
vals <- seq(-3, 3, by = .001)
vals
ggplot(data.table(value = vals), aes(value)) +
geom_point()
vals
vals <- data.table(x = seq(-3, 3, by = .001))
vals
v1 <- j - 1
v2 <- j *n - j
v2
v1 <- j - 1; v2 <- j *n - j
crit.val <- qf(1 - 0.05, v1, v2)
vals[, y := qf(x, v1, v2)]
vals[, y := qf(x, v1, v2)]
vals <- data.table(x = seq(-3, 3, by = .001))
vals[, y := qf(x, v1, v2)]
vals
vals[, y := qf(vals$x, v1, v2)]
vals
vals[, y := pf(vals$x, v1, v2)]
vals
ggplot(data.table(value = vals), aes(value)) +
geom_point()
ggplot(vals, aes(x, y)) +
geom_point()
vals <- data.table(x = seq(-3, 5, by = .001))
vals[, y := pf(vals$x, v1, v2)]
ggplot(vals, aes(x, y)) +
geom_point()
vals <- data.table(x = seq(0, 10, by = .001))
vals[, y := pf(vals$x, v1, v2)]
ggplot(vals, aes(x, y)) +
geom_point()
vals <- data.table(x = seq(0, 20, by = .001))
vals[, y := pf(vals$x, v1, v2)]
ggplot(vals, aes(x, y)) +
geom_point()
vals
vals <- data.table(x = seq(0, 20, by = .001))
vals[, y := qf(vals$x, v1, v2)]
vals
vals <- data.table(x = seq(0, 10, by = .001))
vals[, y := qf(vals$x, v1, v2)]
ggplot(vals, aes(x, y)) +
geom_point()
vals <- data.table(x = seq(0, 10, by = .001))
vals[, y := df(vals$x, v1, v2)]
ggplot(vals, aes(x, y)) +
geom_point()
ggplot(vals, aes(x, y)) +
geom_point(size = .8)
ggplot(vals, aes(x, y)) +
geom_point(size = .7)
ggplot(vals, aes(x, y)) +
geom_point(size = .7)
crit.val
ggplot(vals, aes(x, y)) +
geom_point(size = .7) +
geom_vline(xintercept = crit.val)
ggplot(vals, aes(x, y)) +
geom_point(size = .7) +
geom_vline(xintercept = crit.val, col = "darkred")
vals[y == 2.5]
vals
vals[x == 2.5]
ggplot(vals, aes(x, y)) +
geom_point(size = .7) +
geom_vline(xintercept = crit.val, col = "darkred") +
geom_vline(xintercept = f.stat, col = "cornflowerblue")
crit.val
f.stat
g1 <- c(9, 10, 15)
g2 <- c(16, 8, 13, 6)
g3 <- c(7, 6, 9)
data <- data.table(g1, g2, g3)
data <- data.table(g1, g2, g3)
g1 <- c(9, 10, 15)
g2 <- c(16, 8, 13, 6)
g3 <- c(7, 6, 9)
data <- data.table(g1, g2, g3)
data <- list(g1, g2, g3)
data
anova1(data)
var(c(3, 4, 5, 6, 7))

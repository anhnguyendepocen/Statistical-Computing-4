colors
addRunners( men8L[ groups == 9 ], colors, numLty = 6)
men8LongFit <- lapply(men8L, fitOne)
coeffs <- sapply(men8LongFit, "[", "ageCoeff" )
ages <- sapply(men8LongFit, "[", "medAge")
coeffs
ages
longCoeffs <- lm(coeffs ~ ages)
summary(longCoeffs)
data_path <- c(data.dir, c("men_txt", "women_txt"))
data_path
data_path <- sapply(c("men_txt", "women_txt"), function(p) file.path(paste(data.dir, p)))
data_path
data_path <- sapply(c("men_txt", "women_txt"), function(p) file.path(data.dir, p))
data_path
data_files <- list.files(data_path)
data_files
data_files <- list.files(data_paths)
data_files
data_paths <- sapply(c("men_txt", "women_txt"), function(p) file.path(data.dir, p))
data_files <- list.files(data_paths)
data_files
data_paths <- sapply(c("men_txt", "women_txt"), function(p) {
path <- file.path(data.dir, p))
sapply(p, list.files(path))
}
data_paths <- sapply(c("men_txt", "women_txt"), function(p) {
path <- file.path(data.dir, p)
sapply(p, list.files(path))
}
data_paths
data_paths <- sapply(c("men_txt", "women_txt"), function(p) {
path <- file.path(data.dir, p)
sapply(path, function( f ) {
list.files(path)
})
})
data_paths
data_paths <- sapply(c("men_txt", "women_txt"), function(p) {
path <- file.path(data.dir, p)
sapply(path, function( f ) {
file.path(path, list.files(path) )
})
})
data_paths
rm(data_path)
data_paths[1]
tp <- data_paths[1]
sread.fwf(tp)
read.fwf(tp)
read.fwf(tp, widths = 75)
read.fwf(tp, widths = 125)
data_paths[1]
data_paths[, 1]
consolidated_files <-
melt(data_paths)
consolidated_files <- c(data_paths[, 1], data_paths[, 2])
consolidated_files
length(consolidated_files)
tp <- consolidated_files[1]
tp
lapply(consolidated_files, function(f) read.fwf(f, widths = 120))
files <- lapply(consolidated_files, function(f) read.fwf(f, widths = 120))
length(files)
files
womenDF <- mapply(createDF, womenResMat, year = years,
sex = rep("F", 14), SIMPLIFY = F)
sapply(womenDF, function(x) sum(is.na(x$runTime)))
age <- as.numeric(menResMat[['2012']][, 'ag'])
tail(age)
age <- sapply(menResMat,
function(x) as.numeric(x[, "ag"]))
age_values <- plyr::ldply(age, data.frame)
colnames(age_values) <- c("Year", "Age")
ggplot(age_values, aes(Age)) +
geom_histogram(aes(fill = ..count..), bins = 30)
ggplot(age_values, aes(Year, Age)) +
geom_boxplot(aes(fill = Year)) +
labs(title = "Age By Race Year")
Purple8 <- brewer.pal(9, "Purples")[8]
Purple8A <- paste(Purple8, "14", sep = "")
ggplot(cbMen, aes(age, runTime)) +
geom_jitter(col = Purple8A) +
geom_smooth() +
xlim(10, 75) +
ylim(45, 150)
mR.lo99 <- loess(runTime ~ age, cbMenSub[ cbMenSub$year == 1999,])
mR.lo.pr99 <- predict(mR.lo99, data.frame(age = age20to80))
summary(mR.lo.pr99)
mR.lo12 <- loess(runTime ~ age, cbMenSub[ cbMenSub$year == 2012, ])
mR.lo.pr12 <- predict(mR.lo12, data.frame(age = age20to80))
summary(mR.lo12)
plot(mR.lo.pr99 ~ age20to80,
type = "l", col = "purple", lwd = 3,
xlab = "Age (years)", ylab = "Fitted Run Time (minutes)")
lines(x = age20to80, y = mR.lo.pr12,
col = "green", lty = 2, lwd = 3)
legend("topleft", col = c("purple", "green"), lty = 1:2, lwd = 3,
legend =  c("1999", "2012"), bty = "n")
age20to80
age20to70 <- seq( from = 20, to 70 by = 1)
age20to70 <- seq( from = 20, to = 70 by = 1)
age20to70 <- seq( from = 20, to = 70, by = 1)
age20to70
mR.lo992 <- loess(runTime ~ age, cbMenSub[ cbMenSub$year == 1999,])
mR.lo.pr992 <- predict(mR.lo99, data.frame(age = age20to70))
summary(mR.lo.pr992)
mR.lo122 <- loess(runTime ~ age, cbMenSub[ cbMenSub$year == 2012, ])
mR.lo.pr122 <- predict(mR.lo122, data.frame(age = age20to70))
summary(mR.lo12)
summary(mR.lo122)
plot(mR.lo.pr992 ~ age20to70,
type = "l", col = "purple", lwd = 3,
xlab = "Age (years)", ylab = "Fitted Run Time (minutes)")
lines(x = age20to70, y = mR.lo.pr122,
col = "green", lty = 2, lwd = 3)
legend("topleft", col = c("purple", "green"), lty = 1:2, lwd = 3,
legend =  c("1999", "2012"), bty = "n")
cbMen
ggplot(cbMen, aes(age, group = year)) +
geom_density() +
facet_wrap(~year)
ggplot(cbMen, aes(age, group = year)) +
geom_histogram(aes(fil = ..count..)) +
geom_density() +
facet_wrap(~year)
ggplot(cbMen, aes(age, group = year)) +
geom_histogram(aes(fill = ..count..), bins = 30) +
geom_density() +
facet_wrap(~year)
ggplot(cbMen, aes(age, group = year)) +
geom_density() +
geom_histogram(aes(fill = ..count..), bins = 30) +
facet_wrap(~year)
ggplot(cbMen, aes(age, group = year)) +
geom_histogram(aes(fill = ..count..), bins = 30) +
facet_wrap(~year)
ggplot(cbMen, aes(age, group = year)) +
geom_boxplot(aes(fill = year))
ggplot(cbMen, aes(age, group = year)) +
geom_boxplot(aes(fill = year)) +
coord_flip()
ggplot(cbMen, aes(age, group = year)) +
geom_boxplot(aes(fill = as.factor(year))) +
coord_flip()
ggplot(cbMen, aes(age, group = year)) +
geom_boxplot(aes(fill = as.factor(year))) +
coord_flip() +
labs(title = "Age by Race Year", xlab = "Race Year", ylab = "Age")
ggplot(cbMen, aes(age, group = year)) +
geom_qq()
ggplot(cbMen, aes(sample = age, group = year)) +
geom_qq()
ggplot(cbMen, aes(sample = age, group = year)) +
geom_qq_line()
ggplot(cbMen, aes(age, group = year)) +
geom_quantile()
ggplot(cbMen, aes(year, age)) +
geom_quantile()
ggplot(cbMen, aes(year, age, group = year)) +
geom_quantile()
ggplot(cbMen, aes(year, age)) +
geom_quantile()
which.max(cbMenSub$runTime, by = year)
fastest_times <- cbMenSub[, .(Max = max(runTime)), by = year]
cbMenSub <- as.data.table(cbMenSub)
cbMenSub
fastest_times <- cbMenSub[, .(Max = max(runTime)), by = year]
fastest_times
normalized_times <- cbMenSub[, .(ByYear = runTime), by = year]
normalized_times
normalized_times <- cbMenSub[, .(Time = runTime), by = year]
normalized_times <- cbMenSub[, .(Time = runTime), by = year]
normalized_times
fastest_times
normalized_times <- merge(normalized_times, fastest_times, by = c("year"))
normalized_times
normalized_times[, .(NormTime := Time/Max)]
normalized_times[, .(NormTime = Time/Max)]
normalized_times[, .(Year, NormTime = Time/Max)]
normalized_times[, NormTime := Time/Max]
normalized_times
fastest_times <- cbMenSub[, .(Max = max(runTime)), by = list(year, age)]
fastest_times
normalized_times <- cbMenSub[, .(Age = age, Time = runTime), by = year]
normalized_times
normalized_times <- merge(normalized_times, fastest_times, by = c("year", "age"))
normalized_times <- cbMenSub[, .(Age = age, Time = runTime), by = year]
normalized_times <- merge(normalized_times, fastest_times, by = c("year", "age"))
normalized_times
fastest_times
fastest_times <- cbMenSub[, .(max = max(runTime)), by = list(year, age)]
normalized_times <- cbMenSub[, .(age, Time = runTime), by = c(year, age)]
normalized_times <- cbMenSub[, .(Time = runTime), by = c(year, age)]
normalized_times
fastest_times <- cbMenSub[, .(max = max(runTime)), by = list(year, age)]
normalized_times <- cbMenSub[, .(Time = runTime), by = c(year, age)]
cbMenSub
normalized_times <- cbMenSub[, .(Time = runTime), by = c(year, age)]
normalized_times <- cbMenSub[, .(Time = runTime), by = list(year, age)]
normalized_times
normalized_times <- merge(normalized_times, fastest_times, by = c("year", "age"))
normalized_times
normalized_times <- cbMenSub[, .(runTime), by = list(year, age)]
normalized_times
normalized_times <- merge(normalized_times, fastest_times, by = c("year", "age"))
normalized_times[, NormTime := runTime/max]
normalized_times
normalized_times[, normTime := runTime/max]
normalized_times <- cbMenSub[, .(runTime), by = list(year, age)]
normalized_times <- merge(normalized_times, fastest_times, by = c("year", "age"))
normalized_times[, normTime := runTime/max]
mR.norm <- losess(normTime ~ age, data = normalized_times)
mR.norm <- loess(normTime ~ age, data = normalized_times)
mR.norm
summary(mR.norm)
age_range <- seq( from = 20, to = 80, by = 1 )
smoothed_times <- predict(mR.norm, newdata = age_range)
smoothed_times
smooth_results <- data.table(age = age_range, time = smoothed_times)
smooth_results
ggplot(smooth_results, aes(age, time)) +
geom_boxplot(aes(fill = age))
ggplot(smooth_results, aes(time, group = age)) +
geom_boxplot(aes(fill = age))
ggplot(smooth_results, aes(time, group = age)) +
geom_boxplot(aes(fill = age))
ggplot(smooth_results, aes(age, time)) +
geom_point(aes(fill = age))
ggplot(smooth_results, aes(age, time)) +
geom_point(aes(col = age))
ggplot(smooth_results, aes(age, time)) +
geom_point(aes(col = age)) +
geom_smooth()
ggplot(smooth_results, aes(age, time)) +
geom_point(aes(col = age)) +
geom_smooth(alpha = .2)
menResMat
homeClean
head(homeClean)
homeClean
cbMenSub2 <- cbMenSub
cbMenSub2$ID = paste(homeClean, cbMenSub$yob, sep = "_")
cbMenSub2
races <- tapply(cbMenSub2$year, cbMenSub$ID, length)
races
races8 <- names(races)[which(races >= 8)]
men8 <- cbMenSub[ cbMenSub$ID %in% races8, ]
orderByRunner <- order(men8$ID, men8$year)
men8 <- men8[orderByRunner, ]
men8
races <- tapply(cbMenSub2$year, cbMenSub$ID, length)
races
races8 <- names(races)[which(races >= 8)]
races8
men8 <- cbMenSub2[ cbMenSub2$ID %in% races8, ]
men8
races8 <- names(races)[which(races >= 8)]
men8 <- cbMenSub2[ cbMenSub2$ID %in% races8, ]
races8
cbMenSub2$ID
men8 <- cbMenSub2[ cbMenSub2$ID %in% races8, ]
men8
races8 <- names(races)[which(races >= 8)]
races8
cbMenSub2
cbMenSub2 <- cbMenSub
cbMenSub2$ID = paste(nameClean, homeClean, cbMenSub$yob, sep = "_")
cbMenSub2
homeClean2 <- str_remove_all(homeClean, ".")
homeClean2
homeClean2 <- str_remove_all(homeClean, "::blank::")
homeClean2 <- str_remove_all(homeClean, "::blank::")
homeClean2
homeClean2 <- str_remove_all(homeClean, " ")
head(homeClean2)
homeClean2
homeClean2 <- str_remove_all(homeClean2, ",")
homeClean2
head(homeClean2)
cbMenSub2$ID = paste(nameClean, homeClean2, cbMenSub$yob, sep = "_")
races <- tapply(cbMenSub2$year, cbMenSub$ID, length)
races8 <- names(races)[which(races >= 8)]
men8 <- cbMenSub2[ cbMenSub2$ID %in% races8, ]
orderByRunner <- order(men8$ID, men8$year)
men8 <- men8[orderByRunner, ]
men8
cbMenSub2$ID = paste(nameClean, homeClean2, cbMenSub$yob, sep = "_")
races <- tapply(cbMenSub2$year, cbMenSub$ID, length)
races
races8 <- names(races)[which(races >= 6)]
men8 <- cbMenSub2[ cbMenSub2$ID %in% races8, ]
men8
races <- tapply(cbMenSub2$year, cbMenSub2$ID, length)
races
races8 <- names(races)[which(races >= 6)]
races8
races8 <- names(races)[which(races >= 8)]
men8 <- cbMenSub2[ cbMenSub2$ID %in% races8, ]
men8
races <- tapply(cbMenSub2$year, cbMenSub2$ID, length)
races8 <- names(races)[which(races >= 8)]
men8 <- cbMenSub2[ cbMenSub2$ID %in% races8, ]
men8
races
orderByRunner <- order(men8$ID, men8$year)
men8 <- men8[orderByRunner, ]
men8 <- men8[orderByRunner, ]
men8
numRaces <- tapply(cbMenSub$year, cbMenSub$ID, length)
races8 <- names(numRaces)[which(numRaces >= 8)]
men8 <- cbMenSub[ cbMenSub$ID %in% races8, ]
numRaces
races8
men8
men8
years_raced <- as.data.table(men8)[, .(year), by = ID]
years_raced
years_raced
years_raced[ID == 'bill rodgers_1948_ma']
years <- 1999:2012
years_raced[ID == 'bill rodgers_1948_ma']$year - years
?rle
rle(years_raced[ID == 'bill rodgers_1948_ma']$year)
years_raced[ID == 'bill rodgers_1948_ma']$year - 1999
years_raced[ID == 'bill rodgers_1948_ma']$year - years
years_raced[ID == 'bill rodgers_1948_ma']$year - 1999
rle(years_raced[ID == 'bill rodgers_1948_ma']$year - 1999)
rle(years_raced[ID == 'bill rodgers_1948_ma']$year - 1999)$lengths
years_raced[ID == 'bill rodgers_1948_ma']
years_raced[ID == 'bill rodgers_1948_ma'] - 1999
years_raced[ID == 'bill rodgers_1948_ma']$year - 1999
years_raced <- as.data.table(men8)[, .(year, runTime), by = ID]
years_raced
by_year <- as.data.table(men8)[, .(year, runTime), by = ID]
by_year
bill_dat <- years_raced[ID == 'bill rodgers_1948_ma']
bill_dat <- by_year[ID == 'bill rodgers_1948_ma']
bill_dat
lead(bill_dat, 1)
bill_dat
by_year %>%
group_by(ID) %>%
mutate(year_gap = year - lag(year))
by_year %>%
group_by(ID) %>%
mutate(year_gap = year - lag(year, 2))
by_year %>%
group_by(ID) %>%
mutate(year_gap = year - lag(year, 2), run_diff = runTime - lag(runTime, 1))
by_year %>%
group_by(ID) %>%
mutate(year_gap = year - lag(year, 1), run_diff = runTime - lag(runTime, 1))
by_year %>%
group_by(ID) %>%
mutate(year_gap = year - lag(year, 1), run_diff = runTime - lag(runTime, 1)) %>%
filter(year_gap <= 2 && run_diff <= 15)
by_year %>%
group_by(ID) %>%
mutate(year_gap = year - lag(year, 1), run_diff = runTime - lag(runTime, 1)) %>%
filter(year_gap <= 2)
by_year
by_year %>%
group_by(ID) %>%
mutate(year_gap = year - lag(year, 1), run_diff = runTime - lag(runTime, 1)) %>%
filter(year_gap <= 2)
by_year %>%
group_by(ID) %>%
mutate(year_gap = year - lag(year, 1), run_diff = runTime - lag(runTime, 1)) %>%
filter(year_gap <= 2) %>%
filter(run_diff < 10)
by_year %>%
group_by(ID) %>%
mutate(year_gap = year - lag(year, 1), run_diff = runTime - lag(runTime, 1)) %>%
filter(year_gap <= 2) %>%
filter(run_diff < 5)
by_year %>%
group_by(ID) %>%
mutate(year_gap = year - lag(year, 1), run_diff = runTime - lag(runTime, 1)) %>%
filter(year_gap <= 2) %>%
filter(abs(run_diff) < 10)
by_year %>%
group_by(ID) %>%
mutate(year_gap = year - lag(year, 1), run_diff = runTime - lag(runTime, 1)) %>%
filter(year_gap <= 2) %>%
filter(abs(run_diff) < 8)
by_year %>%
group_by(ID) %>%
mutate(year_gap = year - lag(year, 1), run_diff = runTime - lag(runTime, 1)) %>%
filter(year_gap <= 2) %>%
filter(abs(run_diff) < 5)
by_year %>%
group_by(ID) %>%
mutate(year_gap = year - lag(year, 1), run_diff = runTime - lag(runTime, 1)) %>%
filter(year_gap <= 2) %>%
filter(abs(run_diff) < 5) %>%
distinct(ID)
nrow(by_year)
by_year %>%
group_by(ID) %>%
mutate(year_gap = year - lag(year, 1), run_diff = runTime - lag(runTime, 1)) %>%
filter(year_gap <= 2) %>%
filter(abs(run_diff) < 5) %>%
distinct(ID)
by_year
sans_outliers <- by_year %>%
group_by(ID) %>%
mutate(year_gap = year - lag(year, 1), run_diff = runTime - lag(runTime, 1)) %>%
filter(year_gap <= 2) %>%
filter(abs(run_diff) < 5) %>%
distinct(ID)
nrow(sans_outliers)
x <- seq(-10, 10, .1)
x <- seq(-10, 10, .1)
y <- f(x)
f <- x^3 - x
x <- seq(-10, 10, .1)
y <- f(x)
f <- function(x) x^3 - x
x <- seq(-10, 10, .1)
y <- f(x)
plot(x, y)
plot(x, y, lty = 1)
ggplot(data.table(x, y), aes(x, y)) +
geom_point()
ggplot(data.table(x, y), aes(x, y)) +
geom_point() +
geom_vline(xintercept = 1/4)
install.packages("RSpamData")
data.dir <- file.path(here::here(), "Case Studies", "datasets", "spam")
library(data.table, quietly = TRUE, warn.conflicts = FALSE)
library(dplyr, quietly = TRUE, warn.conflicts = FALSE)
library(ggthemes, quietly = TRUE, warn.conflicts = FALSE)
library(scales, quietly = TRUE, warn.conflicts = FALSE)
library(knitr, quietly = TRUE, warn.conflicts = FALSE)
library(kableExtra, quietly = TRUE, warn.conflicts = FALSE)
library(pander, quietly = TRUE, warn.conflicts = FALSE)
library(formattable, quietly = TRUE, warn.conflicts = FALSE)
library(grid, quietly = TRUE, warn.conflicts = FALSE)
library(gridExtra, quietly = TRUE, warn.conflicts = FALSE)
library(extrafont, quietly = TRUE, warn.conflicts = FALSE)
library(tinytex, quietly = TRUE, warn.conflicts = FALSE)
library(here, quietly = TRUE, warn.conflicts = FALSE)
library(codetools, quietly = TRUE, warn.conflicts = FALSE)
library(lattice, quietly = TRUE, warn.conflicts = FALSE)
library(fields, quietly = TRUE, warn.conflicts = FALSE)
library(RColorBrewer, quietly = TRUE, warn.conflicts = FALSE)
library(rbenchmark, quietly = TRUE, warn.conflicts = FALSE)
options(tinytex.verbose = TRUE)
suppressMessages(library("tidyverse"))
pretty_kable <- function(data, title, dig = 2) {
kable(data, caption = title, digits = dig) %>%
kable_styling(bootstrap_options = c("striped", "hover")) %>%
kableExtra::kable_styling(latex_options = "hold_position")
}
theme_set(theme_light())
# Theme Overrides
theme_update(axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
plot.title = element_text(hjust = 0.5, size = 16, face = "bold", color = "darkgreen"),
axis.title = element_text(face = "bold", size = 12, colour = "steelblue4"),
plot.subtitle = element_text(face = "bold", size = 8, colour = "darkred"),
legend.title = element_text(size = 12, color = "darkred", face = "bold"),
legend.position = "right", legend.title.align=0.5,
panel.border = element_rect(linetype = "solid",
colour = "lightgray"),
plot.margin = unit(c( 0.1, 0.1, 0.1, 0.1), "inches"))
data.dir <- file.path(here::here(), "Case Studies", "datasets", "spam")
knitr::opts_chunk$set(comment = NA)
panderOptions('table.alignment.default', function(df)
ifelse(sapply(df, is.numeric), 'right', 'left'))
panderOptions('table.split.table', Inf)
panderOptions('big.mark', ",")
panderOptions('keep.trailing.zeros', TRUE)
library(data.table, quietly = TRUE, warn.conflicts = FALSE)
library(dplyr, quietly = TRUE, warn.conflicts = FALSE)
library(ggthemes, quietly = TRUE, warn.conflicts = FALSE)
library(scales, quietly = TRUE, warn.conflicts = FALSE)
library(knitr, quietly = TRUE, warn.conflicts = FALSE)
library(kableExtra, quietly = TRUE, warn.conflicts = FALSE)
library(pander, quietly = TRUE, warn.conflicts = FALSE)
library(formattable, quietly = TRUE, warn.conflicts = FALSE)
library(grid, quietly = TRUE, warn.conflicts = FALSE)
library(gridExtra, quietly = TRUE, warn.conflicts = FALSE)
library(extrafont, quietly = TRUE, warn.conflicts = FALSE)
library(tinytex, quietly = TRUE, warn.conflicts = FALSE)
library(here, quietly = TRUE, warn.conflicts = FALSE)
library(codetools, quietly = TRUE, warn.conflicts = FALSE)
library(lattice, quietly = TRUE, warn.conflicts = FALSE)
library(fields, quietly = TRUE, warn.conflicts = FALSE)
library(RColorBrewer, quietly = TRUE, warn.conflicts = FALSE)
library(rbenchmark, quietly = TRUE, warn.conflicts = FALSE)
options(tinytex.verbose = TRUE)
suppressMessages(library("tidyverse"))
pretty_kable <- function(data, title, dig = 2) {
kable(data, caption = title, digits = dig) %>%
kable_styling(bootstrap_options = c("striped", "hover")) %>%
kableExtra::kable_styling(latex_options = "hold_position")
}
theme_set(theme_light())
# Theme Overrides
theme_update(axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
plot.title = element_text(hjust = 0.5, size = 16, face = "bold", color = "darkgreen"),
axis.title = element_text(face = "bold", size = 12, colour = "steelblue4"),
plot.subtitle = element_text(face = "bold", size = 8, colour = "darkred"),
legend.title = element_text(size = 12, color = "darkred", face = "bold"),
legend.position = "right", legend.title.align=0.5,
panel.border = element_rect(linetype = "solid",
colour = "lightgray"),
plot.margin = unit(c( 0.1, 0.1, 0.1, 0.1), "inches"))
data.dir <- file.path(here::here(), "Case Studies", "datasets", "spam")

bootstrap.values <- vector(mode = "numeric", length = N)
bootstrap.values
bootstrap.mean <- mean(bootstrap.values)
bootstrap.bias <- bootstrap.mean - observed
bootstrap.se <- sd(bootstrap.values)
bootstrap.bias / bootstrap.se
quantile(bootstrap.values, c(Lower = alpha/2, Upper = 1 - alpha/2))
bootstrap.bias / bootstrap.se
bootstrap.bias
bootstrap.se
bootstrap.se <- sd(bootstrap.values)
bootstrap.se
bootstrap.values
bootstrap.values <- vector(mode = "numeric", length = N)
for(i in 1:N)
{
v.samp <- sample(calories.vanilla, size = length(calories.vanilla), replace = T)
c.samp <- sample(calories.chocolate, size = length(calories.chocolate), replace = T)
bootstrap.values[i] <- mean(v.samp) - mean(c.samp)
}
bootstrap.values
bootstrap.mean <- mean(bootstrap.values)
bootstrap.mean
bootstrap.bias
bootstrap.se
sd(bootstrap.values)
bootstrap.mean
observed
bootstrap.mean
bootstrap.bias
bootstrap.se
bootstrap.se <- sd(bootstrap.values)
bootstrap.mean
observed
calories.vanilla <- icecream[Flavor == "Vanilla"]$Calories
calories.chocolate <- icecream[Flavor == "Chocolate"]$Calories
calories.vanilla
observed <- mean(calories.vanilla) - mean(calories.chocolate)
observed
observed
ggplot(data.table(values = bootstrap.values), aes(values)) +
geom_histogram(aes(y = ..density.., fill = ..count..), bins = 30) +
geom_density(col = "darkorange")
ggplot(data.table(values = bootstrap.values), aes(values)) +
geom_histogram(aes(y = ..density.., fill = ..count..), bins = 30) +
geom_density(col = "darkorange") +
geom_vline(xintercept = observed)
calories.vanilla
calories.chocolate
calories.vanilla <- icecream[Flavor == "Vanilla"]$Calories
calories.chocolate <- icecream[Flavor == "Chocolate"]$Calories
N <- 10e3
observed <- mean(calories.vanilla) - mean(calories.chocolate)
bootstrap.values <- vector(mode = "numeric", length = N)
for(i in 1:N)
{
index <- sample(length(calories.vanilla), length(calories.vanilla), replace = T)
v.samp <- calories.vanilla[index]
c.samp <- calories.chocolate[index]
bootstrap.values[i] <- mean(v.samp) - mean(c.samp)
}
ggplot(data.table(values = bootstrap.values), aes(values)) +
geom_histogram(aes(y = ..density.., fill = ..count..), bins = 30) +
geom_density(col = "darkorange") +
geom_vline(xintercept = observed)
quantile(bootstrap.values, c(Lower = alpha/2, Upper = 1 - alpha/2))
bootstrap.values <- vector(mode = "numeric", length = N)
for(i in 1:N)
{
index <- sample(length(calories.vanilla), length(calories.vanilla), replace = T)
v.samp <- calories.vanilla[index]
c.samp <- calories.chocolate[index]
bootstrap.values[i] <- mean(c.samp) - mean(v.samp)
}
ggplot(data.table(values = bootstrap.values), aes(values)) +
geom_histogram(aes(y = ..density.., fill = ..count..), bins = 30) +
geom_density(col = "darkorange") +
geom_vline(xintercept = observed)
bootstrap.mean <- mean(bootstrap.values)
bootstrap.bias <- bootstrap.mean - observed
bootstrap.se <- sd(bootstrap.values)
bootstrap.bias / bootstrap.se
quantile(bootstrap.values, c(Lower = alpha/2, Upper = 1 - alpha/2))
observed <- mean(calories.chocolate) - mean(calories.vanilla)
observed
observed
bootstrap.values <- vector(mode = "numeric", length = N)
for(i in 1:N)
{
index <- sample(length(calories.vanilla), length(calories.vanilla), replace = T)
v.samp <- calories.vanilla[index]
c.samp <- calories.chocolate[index]
bootstrap.values[i] <- mean(c.samp) - mean(v.samp)
}
ggplot(data.table(values = bootstrap.values), aes(values)) +
geom_histogram(aes(y = ..density.., fill = ..count..), bins = 30) +
geom_density(col = "darkorange") +
geom_vline(xintercept = observed)
bootstrap.mean <- mean(bootstrap.values)
bootstrap.bias <- bootstrap.mean - observed
bootstrap.se <- sd(bootstrap.values)
bootstrap.mean
bootstrap.bias
bootstrap.se
bootstrap.bias / bootstrap.se
bootstrap.bias
quantile(bootstrap.values, c(Lower = alpha/2, Upper = 1 - alpha/2))
prices.target <- groceries_sans_quaker[Store == "Target"]$Price
prices.walmart <- groceries_sans_quaker[Store == "Walmart"]$Price
N <- 10e3
observed <- mean(prices.target) - mean(prices.walmart)
bootstrap.values <- vector(mode = "numeric", length = N)
for(i in 1:N)
{
index <- sample(length(prices.target), size = length(prices.target), replace = T)
samp.target <- prices.target[index]
samp.walmart <- prices.walmart[index]
bootstrap.values[i] <- mean(samp.target) - mean(samp.walmart)
}
boot.mean <- mean(bootstrap.values)
boot.bias <- boot.mean - observed
boot.se <- sd(bootstrap.values)
boot.bias / boot.se
ggplot(data.table(values = bootstrap.values), aes(values)) +
geom_histogram(aes(y = ..density.., fill = ..count..), bins = 30) +
geom_density(col = "darkorange") +
geom_vline(xintercept = observed, col = "darkred")
quantile(bootstrap.values, c(Lower = alpha/2, Upper = 1 - alpha/2))
groceries_sans_quaker <- groceries[Product != "Quaker Oats Life Cereal  Original ",]
stopifnot(nrow(groceries_sans_quaker) == nrow(groceries) - 2) # ensure removeed
prices.target <- groceries_sans_quaker[Store == "Target"]$Price
prices.walmart <- groceries_sans_quaker[Store == "Walmart"]$Price
N <- 10e3
observed <- mean(prices.target) - mean(prices.walmart)
bootstrap.values <- vector(mode = "numeric", length = N)
for(i in 1:N)
{
index <- sample(length(prices.target), size = length(prices.target), replace = T)
samp.target <- prices.target[index]
samp.walmart <- prices.walmart[index]
bootstrap.values[i] <- mean(samp.target) - mean(samp.walmart)
}
boot.mean <- mean(bootstrap.values)
boot.bias <- boot.mean - observed
boot.se <- sd(bootstrap.values)
boot.bias / boot.se
ggplot(data.table(values = bootstrap.values), aes(values)) +
geom_histogram(aes(y = ..density.., fill = ..count..), bins = 30) +
geom_density(col = "darkorange") +
geom_vline(xintercept = observed, col = "darkred")
quantile(bootstrap.values, c(Lower = alpha/2, Upper = 1 - alpha/2))
groceries_sans_quaker <- groceries[Product != "Quaker Oats Life Cereal  Original ",]
stopifnot(nrow(groceries_sans_quaker) == nrow(groceries) - 2) # ensure removeed
prices.target <- groceries_sans_quaker[Store == "Target"]$Price
prices.walmart <- groceries_sans_quaker[Store == "Walmart"]$Price
N <- 10e3
observed <- mean(prices.target) - mean(prices.walmart)
bootstrap.values <- vector(mode = "numeric", length = N)
for(i in 1:N)
{
index <- sample(length(prices.target), size = length(prices.target), replace = T)
samp.target <- prices.target[index]
samp.walmart <- prices.walmart[index]
bootstrap.values[i] <- mean(samp.target) - mean(samp.walmart)
}
boot.mean <- mean(bootstrap.values)
boot.bias <- boot.mean - observed
boot.se <- sd(bootstrap.values)
boot.bias / boot.se
ggplot(data.table(values = bootstrap.values), aes(values)) +
geom_histogram(aes(y = ..density.., fill = ..count..), bins = 30) +
geom_density(col = "darkorange") +
geom_vline(xintercept = observed, col = "darkred")
quantile(bootstrap.values, c(Lower = alpha/2, Upper = 1 - alpha/2))
prices.target <- groceries[Store == "Target"]$Price
prices.walmart <- groceries[Store == "Walmart"]$Price
N <- 10e3
observed <- mean(prices.target) - mean(prices.walmart)
bootstrap.values <- vector(mode = "numeric", length = N)
for(i in 1:N)
{
index <- sample(length(prices.target), size = length(prices.target), replace = T)
samp.target <- prices.target[index]
samp.walmart <- prices.walmart[index]
bootstrap.values[i] <- mean(samp.target) - mean(samp.walmart)
}
boot.mean <- mean(bootstrap.values)
boot.bias <- boot.mean - observed
boot.se <- sd(bootstrap.values)
boot.bias / boot.se
ggplot(data.table(values = bootstrap.values), aes(values)) +
geom_histogram(aes(y = ..density.., fill = ..count..), bins = 30) +
geom_density(col = "darkorange") +
geom_vline(xintercept = observed, col = "darkred")
quantile(bootstrap.values, c(Lower = alpha/2, Upper = 1 - alpha/2))
quantile(bootstrap.values, c(Lower = alpha/2, Upper = 1 - alpha/2))
quantile(bootstrap.values, c(Lower = alpha/2, Upper = 1 - alpha/2))
calories.vanilla <- icecream[Flavor == "Vanilla"]$Calories
calories.chocolate <- icecream[Flavor == "Chocolate"]$Calories
N <- 10e3
observed <- mean(calories.chocolate) - mean(calories.vanilla)
bootstrap.values <- vector(mode = "numeric", length = N)
for(i in 1:N)
{
# paired data, must use the same samples from chocolate and vanilla (ie, same manufacture)
index <- sample(length(calories.vanilla), length(calories.vanilla), replace = T)
v.samp <- calories.vanilla[index]
c.samp <- calories.chocolate[index]
bootstrap.values[i] <- mean(c.samp) - mean(v.samp)
}
ggplot(data.table(values = bootstrap.values), aes(values)) +
geom_histogram(aes(y = ..density.., fill = ..count..), bins = 30) +
geom_density(col = "darkorange") +
geom_vline(xintercept = observed)
bootstrap.mean <- mean(bootstrap.values)
bootstrap.bias <- bootstrap.mean - observed
bootstrap.se <- sd(bootstrap.values)
bootstrap.bias / bootstrap.se
quantile(bootstrap.values, c(Lower = alpha/2, Upper = 1 - alpha/2))
Diving2017 <- data.table(read.csv(paste0(data.dir, "Diving2017.csv"),
header = T))
Diving2017
observed <- median(Diving2017$Final) - median(Diving2017$Semifinal)
observed
result <- vector(mode = "numeric", length = N)
N <- 10^5
result <- vector(mode = "numeric", length = N)
for(i in 1:N)
{
index <- sample(12, replace = T)
Dive.boot <- Diving2017[, index] # resample pairs
result[i] <- median(Dive.boot$Final) - median(Dive.boot$SemiFinal)
}
ggplot(data.table(values = result), aes(values)) +
geom_histogram(aes(y = ..density.., fill = ..count..), bins = 30) +
geom_density(col = "darkorange")
N <- 10^5
result <- vector(mode = "numeric", length = N)
for(i in 1:N)
{
index <- sample(12, replace = T)
Dive.boot <- Diving2017[index, ] # resample pairs
result[i] <- median(Dive.boot$Final) - median(Dive.boot$SemiFinal)
}
ggplot(data.table(values = result), aes(values)) +
geom_histogram(aes(y = ..density.., fill = ..count..), bins = 30) +
geom_density(col = "darkorange")
result <- vector(mode = "numeric", length = N)
for(i in 1:N)
{
index <- sample(nrow(Diving2017), replace = T)
Dive.boot <- Diving2017[index, ] # resample pairs
result[i] <- median(Dive.boot$Final) - median(Dive.boot$SemiFinal)
}
index <- sample(nrow(Diving2017), replace = T)
Dive.boot <- Diving2017[index, ] # resample pairs
index
Dive.boot
median(Dive.boot$Final)
median(Dive.boot$SemiFinal)
N <- 10^5
result <- vector(mode = "numeric", length = N)
for(i in 1:N)
{
index <- sample(nrow(Diving2017), replace = T)
Dive.boot <- Diving2017[index, ] # resample pairs
result[i] <- median(Dive.boot$Final) - median(Dive.boot$Semifinal)
}
ggplot(data.table(values = result), aes(values)) +
geom_histogram(aes(y = ..density.., fill = ..count..), bins = 30) +
geom_density(col = "darkorange")
result
BookPrices <- data.table(read.csv(paste0(data.dir, "BookPrices.csv"),
header = T))
BookPrices
ggpairs(BookPrices)
BookPrices
ggplot(BookPrices, aes(Area, price, group = Area)) +
geom_boxplot(aes(col = Area))
ggplot(BookPrices, aes(Area, Price, group = Area)) +
geom_boxplot(aes(col = Area))
ggplot(BookPrices, aes(Area, Price, group = Area)) +
geom_boxplot(aes(fill = Area))
N <- 10e4
bootstrap.values <- vector(mode = "numeric", length = N)
prices.math <- BookPrices[Area == "Math & Science"]$Price
prices.science <- BookPrices[Area == "Social Sciences"]$Price
bootstrap.values <- vector(mode = "numeric", length = N)
bootstrap.values
bootstrap.values <- vector(mode = "numeric", length = N); n <- length(prices.math)
bootstrap.values <- vector(mode = "numeric", length = N); n <- length(prices.math)
for(i in 1:N)
{
bootstrap.values <- mean( sample(1:n, n, replace = T) )
}
ggplot(data.table(values = bootstrap.values), aes(values)) +
geom_histogram(aes(y = ..density.., fill = ..color..))
ggplot(data.table(values = bootstrap.values), aes(values)) +
geom_histogram(aes(y = ..density.., fill = ..count..))
ggplot(data.table(values = bootstrap.values), aes(values)) +
geom_histogram(aes(y = ..density.., fill = ..count..), bins = 30)
bootstrap.values <- vector(mode = "numeric", length = N); n <- length(prices.math)
for(i in 1:N)
{
bootstrap.values[i] <- mean( sample(1:n, n, replace = T) )
}
ggplot(data.table(values = bootstrap.values), aes(values)) +
geom_histogram(aes(y = ..density.., fill = ..count..), bins = 30)
ggplot(data.table(values = bootstrap.values), aes(values)) +
geom_histogram(aes(y = ..density.., fill = ..count..), bins = 30) +
geom_density(col = "darkorange")
bootstrap.mean <- mean(bootstrap.values)
bootstrap.mean
observed <- mean(prices.math)
observed
observed <- mean(prices.math)
observed
bootstrap.mean <- mean(bootstrap.values)
bootstrap.mean
prices.math
prices.math
observed
bootstrap.values <- vector(mode = "numeric", length = N); n <- length(prices.math)
observed <- mean(prices.math)
for(i in 1:N)
{
bootstrap.values[i] <- mean( sample(prices.math, n, replace = T) )
}
ggplot(data.table(values = bootstrap.values), aes(values)) +
geom_histogram(aes(y = ..density.., fill = ..count..), bins = 30) +
geom_density(col = "darkorange")
bootstrap.mean <- mean(bootstrap.values)
bootstrap.mean
observed
ggplot(data.table(values = bootstrap.values), aes(values)) +
geom_histogram(aes(y = ..density.., fill = ..count..), bins = 30) +
geom_density(col = "darkorange") +
geom_vline(xintercept = observed, col = "darkred")
bootstrap.mean
bootstrap.mean <- mean(bootstrap.values)
N <- 10e4
bootstrap.values <- vector(mode = "numeric", length = N); n <- length(prices.science)
observed <- mean(prices.science)
for(i in 1:N)
{
bootstrap.values[i] <- mean( sample(prices.science, n, replace = T) )
}
ggplot(data.table(values = bootstrap.values), aes(values)) +
geom_histogram(aes(y = ..density.., fill = ..count..), bins = 30) +
geom_density(col = "darkorange") +
geom_vline(xintercept = observed, col = "darkred")
bootstrap.mean <- mean(bootstrap.values)
bootstrap.mean
observed
N <- 10e4
bootstrap.values <- vector(mode = "numeric", length = N); n <- length(prices.science)
observed <- mean(prices.science)
for(i in 1:N)
{
samp.math <- sample(prices.math, length(prices.math), replace = T)
samp.science <- sample(prices.science, length(prices.science), replace = T)
bootstrap.values[i] <- mean(samp.math) / mean(samp.science)
}
bootstrap.values
observed
for(i in 1:N)
{
samp.math <- sample(prices.math, length(prices.math), replace = T)
samp.science <- sample(prices.science, length(prices.science), replace = T)
bootstrap.values[i] <- mean(samp.math) / mean(samp.science)
}
ggplot(data.table(values = bootstrap.values), aes(values)) +
geom_histogram(aes(y = ..density.., fill = ..count..), bins = 30) +
geom_density(col = "darkorange") +
geom_vline(xintercept = observed, col = "darkred")
bootstrap.mean <- mean(bootstrap.values)
bootstrap.mean
bootstrap.values <- vector(mode = "numeric", length = N); n <- length(prices.science)
observed <- mean(prices.science)
for(i in 1:N)
{
samp.math <- sample(prices.math, length(prices.math), replace = T)
samp.science <- sample(prices.science, length(prices.science), replace = T)
bootstrap.values[i] <- mean(samp.math) / mean(samp.science)
}
bootstrap.values
observed <- mean(prices.math) / mean(prices.science)
observed
ggplot(data.table(values = bootstrap.values), aes(values)) +
geom_histogram(aes(y = ..density.., fill = ..count..), bins = 30) +
geom_density(col = "darkorange") +
geom_vline(xintercept = observed, col = "darkred")
alpha <- 0.05
quantile(bootstrap.values, c(alpha/2, 1 - alpha/2))
mean(bootstrap.values) - observed
bootstrap.bias <- mean(bootstrap.values) - observed
bootstrap.se <- sd(bootstrap.values)
bootstrap.bias / bootstrap.se
bootstrap.bias
bootstrap.bias <- mean(bootstrap.values) - observed
bootstrap.se <- sd(bootstrap.values)
bootstrap.bias
bootstrap.bias / bootstrap.se
FlightDelays <- data.table(read.csv(paste0(data.dir, "FlightDelays.csv"),
header = T))
ggpairs(FlightDelays)
ggplot(FlightDelays, aes(Carrier, Delay)) +
geom_boxplot()
ggplot(FlightDelays, aes(Carrier, Delay, col = Carrier)) +
geom_boxplot()
ua.flights <- FlightDelays[Carrier == "UA"]$Delay
flights <- melt(FlightDelays, id.vars = Carrier, measure.vars = Delay)
flights <- melt(FlightDelays, id.vars = "Carrier", measure.vars = "Delay")
flights
flights <- melt(FlightDelays, id.vars = "Carrier", measure.vars = "Delay", value.name = "Delay")
flights
aa.delay <- FlightDelays[Carrier == "AA"]$Delay
ua.delay <- FlightDelays[Carrier == "UA"]$Delay
aa.delay <- FlightDelays[Carrier == "AA"]$Delay
aa.delay
ua.delay
n <- length(ua.delay)
n <- length(ua.delay); N <- 10e4
bootstrap.values <- vector(mode = "numeric", length = n)
for(i in 1:N)
{
bootstrap.values[i] <- mean( sample(ua.delay, n, replace = T))
}
rapply(N, fun = mean( sample(ua.delay, n, replace = T)) )
bootstrap.values <- rapply(N, f = mean( sample(ua.delay, n, replace = T)) )
bootstrap.values <- rapply(N, f = function(x){ mean( sample(ua.delay, n, replace = T))} )
bootstrap.values <- tapply(N, f = function(x){ mean( sample(ua.delay, n, replace = T))} )
for(i in 1:N)
{
bootstrap.values[i] <- mean( sample(ua.delay, n, replace = T))
}
ggplot(data.table(values = bootstrap.values), aes(values)) +
geom_histogram(aes(y = ..density.., fill = ..count..), bins = 30) +
geom_density(col = "darkorange")
n <- length(aa.delay); N <- 10e4
bootstrap.values <- vector(mode = "numeric", length = n)
for(i in 1:N)
{
bootstrap.values[i] <- mean( sample(aa.delay, n, replace = T))
}
ggplot(data.table(values = bootstrap.values), aes(values)) +
geom_histogram(aes(y = ..density.., fill = ..count..), bins = 30) +
geom_density(col = "darkorange")
n <- length(aa.delay); N <- 10e4
bootstrap.values <- vector(mode = "numeric", length = n)
for(i in 1:N)
{
bootstrap.values[i] <- mean( sample(aa.delay, n, replace = T))
}
ggplot(data.table(values = bootstrap.values), aes(values)) +
geom_histogram(aes(y = ..density.., fill = ..count..), bins = 30) +
geom_density(col = "darkorange")
n <- length(aa.delay); N <- 10e4
bootstrap.values <- vector(mode = "numeric", length = n)
for(i in 1:N)
{
bootstrap.values[i] <- mean( sample(aa.delay, n, replace = T)) / mean( sample(ua.delay, n, replace = T))
}
ggplot(data.table(values = bootstrap.values), aes(values)) +
geom_histogram(aes(y = ..density.., fill = ..count..), bins = 30) +
geom_density(col = "darkorange")
quantile(bootstrap.values, c(alpha/2, 1 - alpha/2))
observed <- mean(ua.flights) / mean(aa.flights)
mean(aa.flights)
observed <- mean(ua.delay) / mean(aa.delay)
boot.bias <- mean(bootstrap.values) - observed
boot.bias
boot.bias / sd(bootstrap.values)
boot.bias / sd(bootstrap.values)
boot.bias
mean(bootstrap.values)
observed
ggplot(data.table(values = bootstrap.values), aes(values)) +
geom_histogram(aes(y = ..density.., fill = ..count..), bins = 30) +
geom_density(col = "darkorange") +
geom_vline(xintercept = observed)
observed <- mean(ua.delay) / mean(aa.delay)
for(i in 1:N)
{
bootstrap.values[i] <- mean( sample(aa.delay, n, replace = T)) / mean( sample(ua.delay, n, replace = T))
}
observed <- mean(aa.delay) / mean(ua.delay)
for(i in 1:N)
{
bootstrap.values[i] <- mean( sample(aa.delay, n, replace = T)) / mean( sample(ua.delay, n, replace = T))
}
ggplot(data.table(values = bootstrap.values), aes(values)) +
geom_histogram(aes(y = ..density.., fill = ..count..), bins = 30) +
geom_density(col = "darkorange") +
geom_vline(xintercept = observed)
quantile(bootstrap.values, c(alpha/2, 1 - alpha/2))
boot.bias <- mean(bootstrap.values) - observed
boot.bias / sd(bootstrap.values)
ggplot(data.table(values = bootstrap.values), aes(values)) +
geom_histogram(aes(y = ..density.., fill = ..count..), bins = 30) +
geom_density(col = "darkorange") +
geom_vline(xintercept = observed, col = "darkred")
x <- c(1, 2, 2, 3)
g <- function(theta) sum(log( 1 + (x-theta)^2))
optimize(g, interval = c(0, 4))
obj <- optimize(g, interval = c(0, 4))
obj$minimum
obj$objective
logL <- function(theta) sum(log(dcauchy(x, theta)))
optimize(logL, interval = c(0, 4), maximum = T)
logL <- function(theta) sum(log(dcauchy(x, theta)))
optimize(logL, interval = c(0, 4), maximum = T)

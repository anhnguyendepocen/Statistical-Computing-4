---
title: 'Why Julia'
author: 'Brandon Moretz'
date: '15th May 2020'
options:
    out_path: 01_WhyJulia.md
    doctype: github
---  
  
  
#  Introduction
  
  
```julia
using JuMP; using Clp;
  
  
```
  
Example Solver
  
<p align="center"><img src="https://latex.codecogs.com/gif.latex?min%20&#x5C;sum_{(i,j)}%20c_{ij}x{ij}"/></p>  
  
  
subject to
  
<p align="center"><img src="https://latex.codecogs.com/gif.latex?&#x5C;sum_{i,j%20&#x5C;in%20A}%20x_{ij}%20-%20&#x5C;sum_{(j,i)&#x5C;in%20A}%20x_{ij}%20=%20b_i%20&#x5C;thickspace%20&#x5C;forall_i%20&#x5C;in%20N"/></p>  
  
  
<p align="center"><img src="https://latex.codecogs.com/gif.latex?0%20&#x5C;le%20x_{ij}%20&#x5C;le%201%20&#x5C;space%20&#x5C;forall(i,%20j)%20&#x5C;in%20A"/></p>  
  
  
```julia
m = Model(solver=Clp.Optimizer())
  
@variable(m, 0 <= x[links] <= 1)
  
@objective(m, Min, sum(c[(i, j)] * x[(i, j)] for (i,j) in links) )
  
for i = 1:no_node
   @constraint(m, sum(x[ii, j]) for (ii, j) in links if ii = i)
              - sum(x[(j, ii)] for (j, ii) in links if ii=i) == b[i])
end
  
solve(m)
```
  